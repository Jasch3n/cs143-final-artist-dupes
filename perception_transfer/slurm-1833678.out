## SLURM PROLOG ###############################################################
##    Job ID : 1833678
##  Job Name : batch.sh
##  Nodelist : gpu2103
##      CPUs : 1
##   Mem/CPU : 51200 MB
## Directory : /oscar/home/syu66/Documents/cs143-final-artist-dupes/perception_transfer
##   Job Started : Tue Apr 30 01:04:12 AM EDT 2024
###############################################################################

    Copy/Paste this in your local terminal to ssh tunnel with remote
    -----------------------------------------------------------------
    ssh -N -L 9791:172.20.217.3:9791 syu66@ssh.ccv.brown.edu
    -----------------------------------------------------------------
    Then open a browser on your local machine to the following address
    ------------------------------------------------------------------
    localhost:9791  (prefix w/ https:// if using password)
    ------------------------------------------------------------------
    
Tue Apr 30 01:04:12 2024       
+---------------------------------------------------------------------------------------+
| NVIDIA-SMI 535.129.03             Driver Version: 535.129.03   CUDA Version: 12.2     |
|-----------------------------------------+----------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |
|                                         |                      |               MIG M. |
|=========================================+======================+======================|
|   0  NVIDIA GeForce RTX 3090        On  | 00000000:25:00.0 Off |                  N/A |
| 30%   31C    P8              29W / 350W |     29MiB / 24576MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
                                                                                         
+---------------------------------------------------------------------------------------+
| Processes:                                                                            |
|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |
|        ID   ID                                                             Usage      |
|=======================================================================================|
|    0   N/A  N/A     55920      G   /usr/libexec/Xorg                            21MiB |
+---------------------------------------------------------------------------------------+
  0%|          | 0/4319 [00:00<?, ?it/s]100%|██████████| 4319/4319 [00:00<00:00, 5811741.73it/s]
Using cache found in /users/syu66/.cache/torch/hub/pytorch_vision_v0.10.0
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
EPOCH 1:
torch.Size([32, 3, 256, 256])
tensor([[[[-0.2513, -0.2513, -0.2513,  ..., -0.4739, -0.5253, -0.5767],
          [-0.2513, -0.2513, -0.2342,  ..., -0.5082, -0.5424, -0.5938],
          [-0.2684, -0.2513, -0.2513,  ..., -0.5424, -0.5767, -0.6109],
          ...,
          [-1.6384, -1.2959, -1.4158,  ..., -0.2513, -0.3712, -0.3541],
          [-1.4672, -0.9877, -1.2959,  ..., -0.1828, -0.2684, -0.2684],
          [-1.1760, -1.1932, -1.6213,  ..., -0.1828, -0.1999, -0.1999]],

         [[ 0.7654,  0.7654,  0.7654,  ...,  0.5203,  0.4678,  0.4153],
          [ 0.7654,  0.7654,  0.7829,  ...,  0.4853,  0.4503,  0.3978],
          [ 0.7479,  0.7654,  0.7654,  ...,  0.4503,  0.4153,  0.3803],
          ...,
          [-0.6702, -0.4601, -0.8627,  ...,  0.7829,  0.6954,  0.7129],
          [-0.6352, -0.3025, -0.8452,  ...,  0.8880,  0.8179,  0.8179],
          [-0.4426, -0.5826, -1.1429,  ...,  0.8529,  0.8354,  0.8354]],

         [[ 1.9080,  1.9080,  1.9080,  ...,  1.7685,  1.7511,  1.6988],
          [ 1.9080,  1.9080,  1.9254,  ...,  1.7511,  1.7337,  1.6814],
          [ 1.8905,  1.9080,  1.9080,  ...,  1.7163,  1.6988,  1.6640],
          ...,
          [-0.0615,  0.0431, -0.6193,  ...,  1.6640,  1.5942,  1.5942],
          [-0.0267,  0.1476, -0.6541,  ...,  1.7337,  1.6640,  1.6640],
          [ 0.0953, -0.2532, -1.0201,  ...,  1.7337,  1.6988,  1.6988]]],


        [[[-0.7993, -0.8164, -0.8678,  ..., -0.6452, -0.6623, -0.6794],
          [-0.7479, -0.7822, -0.8164,  ..., -0.6281, -0.6452, -0.6452],
          [-0.6452, -0.6794, -0.7308,  ..., -0.6281, -0.6452, -0.6623],
          ...,
          [-0.9705, -1.0048, -0.8164,  ..., -0.8164, -0.7650, -0.7650],
          [-0.9705, -0.9020, -0.7822,  ..., -0.9363, -0.8164, -0.7993],
          [-0.6623, -0.6452, -0.6794,  ..., -0.9363, -0.8849, -0.5938]],

         [[ 0.5903,  0.5903,  0.5728,  ..., -0.3375, -0.3550, -0.3550],
          [ 0.6254,  0.5903,  0.5903,  ..., -0.3200, -0.3200, -0.3375],
          [ 0.6779,  0.6779,  0.6604,  ..., -0.3200, -0.3375, -0.3550],
          ...,
          [-0.3550, -0.4076, -0.2325,  ..., -0.9678, -0.8803, -0.8627],
          [-0.3025, -0.2500, -0.1625,  ..., -1.1429, -1.0378, -1.0028],
          [ 0.0301,  0.0476, -0.0049,  ..., -1.1779, -1.1954, -0.8978]],

         [[ 0.5311,  0.5485,  0.5659,  ..., -0.8807, -0.9156, -0.9156],
          [ 0.5659,  0.5659,  0.5834,  ..., -0.8458, -0.8633, -0.8633],
          [ 0.6356,  0.6531,  0.6705,  ..., -0.8284, -0.8458, -0.8633],
          ...,
          [-0.7936, -0.8458, -0.6367,  ..., -1.3513, -1.2990, -1.2641],
          [-0.8110, -0.7587, -0.6367,  ..., -1.3861, -1.2641, -1.2641],
          [-0.5844, -0.5495, -0.5844,  ..., -1.3861, -1.4559, -1.2641]]],


        [[[ 1.8379,  1.8379,  1.8550,  ...,  1.9064,  1.8893,  1.8893],
          [ 1.8379,  1.8379,  1.8550,  ...,  1.8893,  1.8893,  1.8893],
          [ 1.8379,  1.8379,  1.8379,  ...,  1.8893,  1.8722,  1.8893],
          ...,
          [ 0.3481,  0.1083,  0.1597,  ...,  0.1083,  0.1083, -0.0629],
          [ 0.2624,  0.0227,  0.0569,  ..., -0.0972, -0.0629, -0.0629],
          [ 0.1083,  0.1939,  0.1254,  ..., -0.0801, -0.0458,  0.0056]],

         [[ 2.1660,  2.1660,  2.1835,  ...,  2.1835,  2.1660,  2.1660],
          [ 2.1660,  2.1660,  2.1835,  ...,  2.1660,  2.1660,  2.1660],
          [ 2.1660,  2.1660,  2.1660,  ...,  2.1660,  2.1485,  2.1660],
          ...,
          [-0.1275, -0.3375, -0.2850,  ..., -0.3901, -0.3725, -0.5651],
          [-0.1975, -0.3901, -0.3725,  ..., -0.6176, -0.5651, -0.5826],
          [-0.3550, -0.2500, -0.3725,  ..., -0.5301, -0.5126, -0.5126]],

         [[ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          ...,
          [-1.5081, -1.6302, -1.6127,  ..., -1.6127, -1.5779, -1.6824],
          [-1.5430, -1.6824, -1.6824,  ..., -1.6302, -1.6127, -1.6302],
          [-1.6476, -1.6127, -1.6302,  ..., -1.6127, -1.6127, -1.5430]]],


        ...,


        [[[-0.8507, -0.8507, -0.8335,  ..., -0.9363, -0.9534, -1.0048],
          [-0.8507, -0.8507, -0.8507,  ..., -0.9020, -0.9192, -0.9705],
          [-0.8507, -0.8678, -0.8678,  ..., -0.8678, -0.8849, -0.9192],
          ...,
          [-1.2617, -1.9809, -1.9467,  ...,  0.6049,  0.5364,  0.5878],
          [-1.3644, -1.7583, -1.7754,  ...,  0.5364,  0.3652,  0.3481],
          [-0.7308, -1.4329, -1.7925,  ...,  0.6221,  0.3652,  0.3309]],

         [[ 0.6429,  0.6429,  0.6429,  ...,  0.6078,  0.5728,  0.5203],
          [ 0.6429,  0.6429,  0.6429,  ...,  0.6429,  0.6078,  0.5553],
          [ 0.6429,  0.6254,  0.6254,  ...,  0.6779,  0.6429,  0.6078],
          ...,
          [-1.0028, -1.8957, -1.8606,  ...,  0.4503,  0.3803,  0.5203],
          [-1.0553, -1.7031, -1.6681,  ...,  0.3277,  0.1877,  0.2927],
          [-0.4426, -1.3354, -1.6681,  ...,  0.3102,  0.1702,  0.2402]],

         [[ 2.0125,  2.0125,  2.0125,  ...,  1.9951,  1.9428,  1.8905],
          [ 2.0125,  2.0125,  2.0125,  ...,  2.0300,  1.9777,  1.9254],
          [ 2.0125,  1.9951,  1.9951,  ...,  2.0648,  2.0125,  1.9777],
          ...,
          [-1.4210, -1.7347, -1.6476,  ...,  0.0779,  0.0779,  0.1476],
          [-1.5779, -1.5779, -1.6127,  ...,  0.0082, -0.0441, -0.0267],
          [-1.3861, -1.4907, -1.6650,  ...,  0.0431, -0.0441, -0.0615]]],


        [[[-1.0048, -0.8164, -0.7650,  ...,  1.8893,  1.9578,  1.9407],
          [-1.0390, -0.9363, -0.7993,  ...,  1.8550,  1.9235,  1.9064],
          [-1.1589, -1.0733, -0.9705,  ...,  1.8722,  1.8893,  1.8722],
          ...,
          [ 0.1939, -0.1486, -0.1828,  ..., -0.1828, -0.0116,  0.1083],
          [-0.0116, -0.5938, -0.5424,  ...,  0.1597,  0.0398,  0.1426],
          [-0.4054, -0.8164, -0.3712,  ...,  0.1768,  0.1768,  0.0056]],

         [[ 0.0826,  0.2402,  0.2577,  ...,  2.0084,  2.0784,  2.0609],
          [ 0.0651,  0.1527,  0.2402,  ...,  1.9734,  2.0434,  2.0259],
          [-0.0224,  0.0476,  0.0826,  ...,  1.9909,  2.0084,  1.9909],
          ...,
          [ 0.1001, -0.0924, -0.1099,  ..., -0.2325, -0.0574,  0.0301],
          [-0.0574, -0.5301, -0.4251,  ...,  0.1001,  0.0301,  0.1352],
          [-0.4601, -0.7402, -0.2325,  ...,  0.1001,  0.2052,  0.0476]],

         [[ 1.1585,  1.3154,  1.2980,  ...,  2.0997,  2.1694,  2.1520],
          [ 1.1759,  1.2282,  1.2980,  ...,  2.0648,  2.1346,  2.1171],
          [ 1.0888,  1.1411,  1.1585,  ...,  2.0823,  2.0997,  2.0823],
          ...,
          [-1.0724, -1.1421, -1.3513,  ..., -1.2641, -1.3164, -1.1770],
          [-1.1944, -1.4907, -1.6127,  ..., -0.9853, -1.2641, -1.0550],
          [-1.4907, -1.6127, -1.4036,  ..., -1.0376, -1.1073, -1.1421]]],


        [[[ 2.2489,  2.2489,  2.2489,  ...,  2.2318,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2147,  2.1633,  ...,  2.1975,  2.2318,  2.2489],
          ...,
          [ 2.2318,  2.1975,  1.6495,  ..., -0.5424,  0.0569,  1.1529],
          [ 2.2489,  2.2147,  1.8722,  ...,  0.1083,  0.5878,  1.4269],
          [ 2.2489,  2.2318,  2.0434,  ...,  0.9817,  1.2728,  1.7694]],

         [[ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4111,  2.4286,  2.4286],
          [ 2.4286,  2.3936,  2.3410,  ...,  2.3761,  2.4111,  2.4286],
          ...,
          [ 2.4286,  2.3761,  1.8158,  ..., -0.5126,  0.1527,  1.3081],
          [ 2.4286,  2.3936,  2.0609,  ...,  0.2402,  0.7304,  1.6057],
          [ 2.4286,  2.4111,  2.2185,  ...,  1.1331,  1.4307,  1.9384]],

         [[ 2.6400,  2.6400,  2.6400,  ...,  2.6226,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6226,  2.6400,  2.6400],
          [ 2.6400,  2.6051,  2.5529,  ...,  2.5703,  2.6226,  2.6400],
          ...,
          [ 2.6400,  2.5529,  1.9603,  ..., -0.3404,  0.4439,  1.4897],
          [ 2.6400,  2.6226,  2.2914,  ...,  0.4265,  0.9668,  1.7685],
          [ 2.6400,  2.6226,  2.4308,  ...,  1.3677,  1.6291,  2.1346]]]])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
batch 1 loss: 0.0
torch.Size([32, 3, 256, 256])
tensor([[[[-2.1008, -2.0837, -2.0837,  ...,  1.3242,  1.3927,  1.4269],
          [-2.0665, -2.0665, -2.0665,  ...,  1.3755,  1.3927,  1.4269],
          [-2.0323, -2.0494, -2.0665,  ...,  1.3927,  1.3927,  1.4269],
          ...,
          [-1.7583, -1.7754, -1.7583,  ..., -0.6452, -0.6109, -0.9705],
          [-1.7240, -1.6898, -1.7069,  ..., -0.0801, -0.6623, -0.9363],
          [-1.7069, -1.5357, -1.7069,  ..., -0.2342, -0.3712, -0.4226]],

         [[-0.1275, -0.1099, -0.1099,  ...,  2.0084,  2.0434,  2.0959],
          [-0.0924, -0.0924, -0.0924,  ...,  2.0434,  2.0434,  2.0959],
          [-0.0574, -0.0574, -0.0749,  ...,  2.0434,  2.0434,  2.0959],
          ...,
          [-1.7206, -1.7206, -1.7206,  ..., -1.2129, -1.2129, -1.4405],
          [-1.6506, -1.6155, -1.6331,  ..., -0.8627, -1.3179, -1.4055],
          [-1.6155, -1.4580, -1.6155,  ..., -0.9678, -1.0378, -1.0028]],

         [[ 2.2914,  2.3088,  2.3088,  ...,  2.6226,  2.6051,  2.6051],
          [ 2.3088,  2.3088,  2.2914,  ...,  2.6400,  2.6051,  2.6051],
          [ 2.2914,  2.2740,  2.2914,  ...,  2.6226,  2.6051,  2.6051],
          ...,
          [-1.3861, -1.4733, -1.5256,  ..., -1.4907, -1.3513, -1.4384],
          [-1.3513, -1.3687, -1.3861,  ..., -1.4210, -1.5081, -1.4907],
          [-1.3513, -1.1770, -1.3164,  ..., -1.4384, -1.3513, -1.3861]]],


        [[[-1.8439, -1.9638, -1.6898,  ..., -2.0665, -2.1008, -2.0837],
          [-1.7925, -1.9124, -1.8439,  ..., -2.0665, -2.1008, -2.0837],
          [-1.7754, -1.8610, -1.9467,  ..., -2.0665, -2.1008, -2.0837],
          ...,
          [-0.1143, -0.0972, -0.0629,  ...,  0.2282,  0.2111,  0.1768],
          [-0.1486, -0.1486, -0.1143,  ...,  0.2111,  0.1768,  0.1426],
          [-0.1657, -0.1657, -0.1314,  ...,  0.1426,  0.1083,  0.0912]],

         [[-1.5630, -1.5980, -1.3179,  ..., -1.9832, -2.0182, -2.0007],
          [-1.4755, -1.5105, -1.4580,  ..., -1.9832, -2.0182, -2.0007],
          [-1.4580, -1.4580, -1.5455,  ..., -1.9832, -2.0182, -2.0007],
          ...,
          [ 1.0105,  1.0455,  1.0805,  ...,  1.2731,  1.2556,  1.2206],
          [ 0.9930,  0.9930,  1.0455,  ...,  1.3256,  1.2731,  1.2556],
          [ 0.9930,  0.9930,  1.0280,  ...,  1.2906,  1.2731,  1.2556]],

         [[-1.0376, -1.1073, -0.8284,  ..., -1.7522, -1.7870, -1.7696],
          [-0.9504, -1.0027, -0.9504,  ..., -1.7522, -1.7870, -1.7696],
          [-0.8981, -0.9330, -1.0201,  ..., -1.7522, -1.7870, -1.7696],
          ...,
          [ 1.8905,  1.9080,  1.9428,  ...,  2.2391,  2.2217,  2.1868],
          [ 1.8731,  1.8731,  1.9254,  ...,  2.2566,  2.2043,  2.1868],
          [ 1.8905,  1.9080,  1.9428,  ...,  2.2043,  2.1868,  2.1694]]],


        [[[ 0.1768,  0.2967,  0.4337,  ...,  0.2453,  0.2453,  0.2453],
          [ 0.1768,  0.2453,  0.3652,  ...,  0.2453,  0.2453,  0.2453],
          [ 0.1597,  0.1939,  0.2796,  ...,  0.2624,  0.2453,  0.2453],
          ...,
          [-1.0390, -1.1075, -1.1932,  ..., -0.4911, -0.5767, -0.5596],
          [-1.2445, -1.2959, -1.2103,  ..., -0.8678, -0.7822, -0.7308],
          [-1.1760, -1.1418, -0.9534,  ..., -1.0733, -0.9534, -0.7137]],

         [[ 1.1506,  1.1681,  1.1856,  ...,  1.2381,  1.2381,  1.2381],
          [ 1.1506,  1.1506,  1.1681,  ...,  1.2381,  1.2381,  1.2381],
          [ 1.1331,  1.1506,  1.1856,  ...,  1.2731,  1.2381,  1.2381],
          ...,
          [ 0.0476, -0.0224, -0.1275,  ...,  0.5203,  0.4853,  0.5728],
          [-0.2325, -0.2500, -0.1450,  ...,  0.3277,  0.4503,  0.4503],
          [-0.1625, -0.1099,  0.0301,  ...,  0.2577,  0.3452,  0.5028]],

         [[ 2.4831,  2.4831,  2.4308,  ...,  2.6226,  2.6226,  2.6226],
          [ 2.5180,  2.4831,  2.4657,  ...,  2.6226,  2.6226,  2.6226],
          [ 2.5354,  2.5006,  2.5180,  ...,  2.6400,  2.6226,  2.6226],
          ...,
          [ 0.6356,  0.4265,  0.1128,  ...,  1.1237,  1.1585,  1.3677],
          [ 0.0082, -0.0441,  0.0953,  ...,  1.0017,  1.1585,  1.1759],
          [ 0.1476,  0.1999,  0.3568,  ...,  1.0888,  1.1585,  1.2282]]],


        ...,


        [[[-1.5528, -1.5357, -1.5528,  ..., -1.3644, -1.3644, -1.3644],
          [-1.5528, -1.5357, -1.5357,  ..., -1.3644, -1.3473, -1.3473],
          [-1.5357, -1.5185, -1.5185,  ..., -1.3473, -1.3302, -1.3130],
          ...,
          [-1.7069, -1.5357, -1.4500,  ..., -0.6794, -0.5767, -0.6452],
          [-1.6898, -1.5014, -1.1418,  ..., -0.6452, -0.6794, -0.5767],
          [-1.7583, -1.6042, -1.0390,  ..., -0.5424, -0.7479, -0.5938]],

         [[-1.3880, -1.3704, -1.3880,  ..., -1.0553, -1.0553, -1.0553],
          [-1.3880, -1.3704, -1.3704,  ..., -1.0553, -1.0378, -1.0378],
          [-1.3704, -1.3529, -1.3529,  ..., -1.0378, -1.0203, -1.0028],
          ...,
          [-1.7206, -1.5805, -1.5630,  ..., -1.0553, -0.9503, -1.0203],
          [-1.7206, -1.5455, -1.2479,  ..., -1.0203, -1.0553, -0.9503],
          [-1.7906, -1.6681, -1.1604,  ..., -0.9153, -1.1253, -0.9678]],

         [[-1.0027, -0.9853, -1.0027,  ..., -0.5844, -0.5844, -0.5844],
          [-1.0027, -0.9853, -0.9853,  ..., -0.5844, -0.5670, -0.5670],
          [-0.9853, -0.9678, -0.9678,  ..., -0.5670, -0.5495, -0.5321],
          ...,
          [-1.6999, -1.6476, -1.6476,  ..., -1.1944, -1.0898, -1.1596],
          [-1.6824, -1.5779, -1.3687,  ..., -1.1596, -1.1944, -1.0898],
          [-1.6999, -1.6650, -1.2641,  ..., -1.0550, -1.2641, -1.1073]]],


        [[[ 0.6392,  0.6734,  0.7077,  ...,  0.9132,  0.9303,  0.9303],
          [ 0.8618,  0.9132,  0.9132,  ...,  0.9303,  0.9646,  0.9474],
          [ 1.2385,  1.4098,  1.5297,  ...,  0.9817,  0.9646,  0.9646],
          ...,
          [-1.4329, -1.5014, -1.4672,  ..., -1.3130, -1.2959, -1.2788],
          [-1.4500, -1.4158, -1.3987,  ..., -1.2959, -1.4158, -1.4843],
          [-1.3815, -1.3644, -1.3644,  ..., -1.3987, -1.3130, -1.2959]],

         [[ 1.1155,  1.1155,  1.0980,  ...,  1.2031,  1.1856,  1.1856],
          [ 1.2206,  1.2031,  1.2206,  ...,  1.2031,  1.2206,  1.2031],
          [ 1.4132,  1.5532,  1.6057,  ...,  1.2206,  1.2381,  1.2206],
          ...,
          [-1.1078, -1.1779, -1.1429,  ..., -0.9503, -0.9678, -0.9853],
          [-1.1253, -1.0903, -1.0903,  ..., -0.9503, -1.1078, -1.1954],
          [-1.0553, -1.0378, -1.0553,  ..., -1.0728, -1.0203, -1.0028]],

         [[ 1.2282,  1.1759,  1.1934,  ...,  1.2282,  1.2282,  1.2282],
          [ 1.2282,  1.1759,  1.2108,  ...,  1.2108,  1.2282,  1.2108],
          [ 1.2631,  1.3677,  1.3851,  ...,  1.1934,  1.1934,  1.1934],
          ...,
          [-0.5495, -0.6193, -0.5844,  ..., -0.3927, -0.3753, -0.3055],
          [-0.5670, -0.5321, -0.5321,  ..., -0.3753, -0.4973, -0.5321],
          [-0.4798, -0.4798, -0.4973,  ..., -0.4450, -0.3927, -0.4275]]],


        [[[-1.4500, -1.4500, -1.3473,  ..., -1.4672, -1.4843, -1.5528],
          [-1.4329, -1.4329, -1.3130,  ..., -1.4500, -1.4672, -1.5185],
          [-1.4158, -1.3815, -1.2959,  ..., -1.4329, -1.4500, -1.4672],
          ...,
          [-2.0494, -2.0323, -2.0323,  ..., -1.9809, -1.9809, -1.9980],
          [-2.0323, -2.0494, -2.0323,  ..., -1.9638, -1.9809, -1.9809],
          [-2.0665, -1.9980, -1.9467,  ..., -1.9638, -1.9809, -1.9809]],

         [[-0.8102, -0.7927, -0.8277,  ..., -0.8978, -0.9328, -1.0028],
          [-0.7927, -0.7927, -0.8102,  ..., -0.8803, -0.9153, -0.9678],
          [-0.7752, -0.7927, -0.8102,  ..., -0.8627, -0.8803, -0.9153],
          ...,
          [-1.9657, -1.9482, -1.9482,  ..., -1.9132, -1.9132, -1.9307],
          [-1.9482, -1.9657, -1.9482,  ..., -1.9132, -1.9307, -1.9307],
          [-1.9832, -1.9132, -1.8606,  ..., -1.9132, -1.9307, -1.9307]],

         [[ 0.3742,  0.3742,  0.4091,  ...,  0.2871,  0.3219,  0.3045],
          [ 0.3916,  0.3916,  0.4265,  ...,  0.3045,  0.3219,  0.3045],
          [ 0.4091,  0.4091,  0.4265,  ...,  0.3045,  0.3045,  0.3045],
          ...,
          [-1.6999, -1.6999, -1.6999,  ..., -1.6650, -1.6824, -1.6824],
          [-1.7173, -1.7347, -1.7173,  ..., -1.6650, -1.6824, -1.6824],
          [-1.7522, -1.6824, -1.6302,  ..., -1.6650, -1.6824, -1.6824]]]])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
batch 2 loss: 0.0
torch.Size([32, 3, 256, 256])
tensor([[[[ 0.9817,  0.9474,  0.9303,  ...,  0.2453,  0.2624,  0.2282],
          [ 0.8618,  0.8276,  0.8104,  ...,  0.2111,  0.1939,  0.1939],
          [ 0.6734,  0.6906,  0.7077,  ...,  0.2282,  0.1939,  0.1597],
          ...,
          [-1.6555, -1.3987, -1.5014,  ..., -1.5528, -1.6898, -1.6898],
          [-1.5014, -1.3130, -1.6727,  ..., -1.5699, -1.8268, -1.8097],
          [-1.3987, -1.3815, -1.6898,  ..., -1.6213, -1.7412, -1.8610]],

         [[ 0.7129,  0.6954,  0.6954,  ...,  0.1352,  0.1527,  0.1176],
          [ 0.6604,  0.6254,  0.6254,  ...,  0.1001,  0.0826,  0.0826],
          [ 0.5553,  0.5728,  0.5903,  ...,  0.1176,  0.0826,  0.0476],
          ...,
          [-1.6155, -1.4230, -1.4930,  ..., -1.3704, -1.5280, -1.5280],
          [-1.4755, -1.3529, -1.6506,  ..., -1.4055, -1.6856, -1.6681],
          [-1.3880, -1.4055, -1.6681,  ..., -1.4580, -1.5980, -1.7206]],

         [[ 1.1585,  1.1411,  1.1062,  ...,  0.6182,  0.6356,  0.6008],
          [ 1.0888,  1.0714,  1.0539,  ...,  0.5834,  0.5659,  0.5659],
          [ 1.0017,  1.0191,  1.0365,  ...,  0.6008,  0.5659,  0.5311],
          ...,
          [-1.4733, -1.5430, -1.5430,  ..., -1.4384, -1.4907, -1.5081],
          [-1.4559, -1.4907, -1.5779,  ..., -1.4559, -1.5604, -1.5779],
          [-1.4907, -1.5081, -1.5430,  ..., -1.5256, -1.5256, -1.5779]]],


        [[[ 1.9749,  1.9749,  1.9920,  ...,  0.5878,  0.5878,  0.6049],
          [ 2.0092,  1.9749,  1.9920,  ...,  0.5536,  0.5536,  0.5707],
          [ 1.9920,  1.9578,  1.9407,  ...,  0.5364,  0.5364,  0.5707],
          ...,
          [-1.2103, -0.2856, -1.1589,  ..., -1.3987, -1.5699, -1.6898],
          [-0.3712, -1.0219, -1.5528,  ..., -0.5938, -1.0390, -1.2959],
          [-0.3027, -0.9192, -1.0904,  ..., -0.4226,  0.5193,  0.6049]],

         [[ 2.0084,  2.0084,  2.0259,  ...,  1.2206,  1.2206,  1.2381],
          [ 2.0434,  2.0084,  2.0259,  ...,  1.1856,  1.1856,  1.2031],
          [ 2.0259,  1.9909,  1.9734,  ...,  1.1506,  1.1331,  1.1681],
          ...,
          [-1.1078,  0.1001, -0.4951,  ..., -0.8102, -0.6877, -0.6527],
          [-0.2850, -0.6176, -0.8102,  ..., -0.4951, -0.7052, -0.8803],
          [-0.2325, -0.5476, -0.3725,  ..., -0.7927,  0.3277,  0.3102]],

         [[ 1.8905,  1.8905,  1.9080,  ...,  1.6465,  1.6465,  1.6640],
          [ 1.9254,  1.8905,  1.9080,  ...,  1.6117,  1.6117,  1.6291],
          [ 1.9080,  1.8731,  1.8557,  ...,  1.5768,  1.5768,  1.6117],
          ...,
          [-1.3164, -0.4101, -1.1421,  ..., -1.3164, -1.4559, -1.5430],
          [-0.6367, -1.1421, -1.5256,  ..., -0.9678, -1.4210, -1.6824],
          [-0.5670, -1.2641, -1.3164,  ..., -1.2293, -0.3578, -0.4798]]],


        [[[-0.9705, -1.0048, -0.9877,  ..., -0.7993, -0.7993, -0.7993],
          [-0.9705, -1.0048, -0.9877,  ..., -0.8164, -0.8164, -0.8164],
          [-0.9705, -0.9877, -0.9877,  ..., -0.8335, -0.8335, -0.8335],
          ...,
          [-1.8953, -1.9124, -1.9124,  ..., -1.8610, -1.8268, -1.6384],
          [-1.9124, -1.8782, -1.8782,  ..., -1.9809, -1.9809, -1.8097],
          [-1.9124, -1.8782, -1.9124,  ..., -1.7754, -1.6384, -1.8097]],

         [[ 0.1527,  0.1176,  0.1352,  ...,  0.2227,  0.2227,  0.2227],
          [ 0.1527,  0.1176,  0.1352,  ...,  0.2052,  0.2052,  0.2052],
          [ 0.1527,  0.1352,  0.1352,  ...,  0.1877,  0.1702,  0.1702],
          ...,
          [-1.7731, -1.7906, -1.7906,  ..., -1.7031, -1.6681, -1.4580],
          [-1.7906, -1.7556, -1.7556,  ..., -1.7206, -1.7206, -1.5455],
          [-1.7906, -1.7556, -1.7906,  ..., -1.4405, -1.3004, -1.4405]],

         [[ 1.4897,  1.4548,  1.4722,  ...,  1.4548,  1.4548,  1.4548],
          [ 1.4897,  1.4548,  1.4722,  ...,  1.4374,  1.4374,  1.4374],
          [ 1.4897,  1.4722,  1.4722,  ...,  1.4722,  1.4548,  1.4548],
          ...,
          [-1.5604, -1.5779, -1.5779,  ..., -1.6127, -1.5779, -1.4559],
          [-1.5779, -1.5430, -1.5430,  ..., -1.6824, -1.6476, -1.5779],
          [-1.5779, -1.5430, -1.5779,  ..., -1.4210, -1.2293, -1.5256]]],


        ...,


        [[[ 0.4166,  0.3994,  0.4166,  ...,  1.7352,  1.7352,  1.7009],
          [ 0.3994,  0.4337,  0.4508,  ...,  1.7180,  1.7352,  1.7009],
          [ 0.3994,  0.4508,  0.4508,  ...,  1.7009,  1.7180,  1.7009],
          ...,
          [-1.0219, -1.1418, -1.1760,  ..., -1.5185, -1.3815, -1.1760],
          [-1.2103, -1.1932, -1.1418,  ..., -1.5699, -1.4843, -1.2274],
          [-1.1418, -1.0562, -1.0219,  ..., -0.9020, -0.8849, -0.8335]],

         [[ 0.6254,  0.6078,  0.6254,  ...,  1.9034,  1.9034,  1.8683],
          [ 0.6078,  0.6429,  0.6604,  ...,  1.8859,  1.9034,  1.8683],
          [ 0.6078,  0.6604,  0.6604,  ...,  1.8683,  1.8859,  1.8683],
          ...,
          [-0.9328, -1.0553, -1.0903,  ..., -1.4055, -1.2479, -1.0553],
          [-1.1253, -1.1078, -1.0553,  ..., -1.4230, -1.3354, -1.1078],
          [-1.0553, -0.9503, -0.9153,  ..., -0.7577, -0.7052, -0.6527]],

         [[ 0.8971,  0.8797,  0.8971,  ...,  2.1520,  2.1520,  2.1171],
          [ 0.8797,  0.9145,  0.9319,  ...,  2.1346,  2.1520,  2.1171],
          [ 0.8797,  0.9319,  0.9319,  ...,  2.1171,  2.1346,  2.1171],
          ...,
          [-0.7761, -0.8981, -0.9156,  ..., -1.2641, -1.1596, -0.9156],
          [-0.9853, -0.9504, -0.9156,  ..., -1.2990, -1.1944, -0.8458],
          [-0.9156, -0.8110, -0.7936,  ..., -0.6193, -0.4973, -0.3753]]],


        [[[ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          ...,
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489]],

         [[ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          ...,
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286]],

         [[ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          ...,
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400]]],


        [[[-1.0048, -1.0048, -1.0048,  ..., -1.0219, -1.0219, -1.0219],
          [-0.9705, -0.9705, -0.9705,  ..., -1.0219, -1.0219, -1.0219],
          [-0.9363, -0.9363, -0.9363,  ..., -1.0219, -1.0219, -1.0219],
          ...,
          [-1.0733, -1.2959, -1.1932,  ..., -1.3815, -1.3987, -1.4672],
          [-0.8678, -1.0904, -1.1589,  ..., -1.2788, -1.3302, -1.3302],
          [-0.8335, -0.8507, -0.9020,  ..., -1.2103, -1.2788, -1.3130]],

         [[-0.8978, -0.8978, -0.8978,  ..., -0.9153, -0.9153, -0.9153],
          [-0.8627, -0.8627, -0.8627,  ..., -0.9153, -0.9153, -0.9153],
          [-0.8277, -0.8277, -0.8277,  ..., -0.9153, -0.9153, -0.9153],
          ...,
          [-0.9678, -1.1954, -1.0903,  ..., -1.2829, -1.3004, -1.3704],
          [-0.7577, -0.9853, -1.0553,  ..., -1.1779, -1.2304, -1.2304],
          [-0.7227, -0.7402, -0.7927,  ..., -1.1078, -1.1779, -1.2129]],

         [[-0.6715, -0.6715, -0.6715,  ..., -0.6890, -0.6890, -0.6890],
          [-0.6367, -0.6367, -0.6367,  ..., -0.6890, -0.6890, -0.6890],
          [-0.6018, -0.6018, -0.6018,  ..., -0.6890, -0.6890, -0.6890],
          ...,
          [-0.7413, -0.9678, -0.8633,  ..., -1.0550, -1.0724, -1.1421],
          [-0.5321, -0.7587, -0.8284,  ..., -0.9504, -1.0027, -1.0027],
          [-0.4973, -0.5147, -0.5670,  ..., -0.8807, -0.9504, -0.9853]]]])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
batch 3 loss: 0.0
torch.Size([32, 3, 256, 256])
tensor([[[[-0.9020, -0.7650, -0.7308,  ..., -0.6794, -0.5938, -0.5938],
          [-0.9363, -0.7650, -0.6623,  ..., -0.6452, -0.6794, -0.6965],
          [-0.9192, -0.7993, -0.6623,  ..., -0.7479, -0.7822, -0.8164],
          ...,
          [-1.2103, -1.1932, -1.2445,  ..., -1.1932, -1.2274, -1.1760],
          [-1.1589, -1.1932, -1.2788,  ..., -1.0562, -1.1247, -1.0048],
          [-1.1760, -1.2445, -1.3130,  ..., -1.0048, -1.0219, -1.0048]],

         [[-0.1275, -0.0924, -0.0574,  ..., -0.0574,  0.0301,  0.0301],
          [-0.1625, -0.0749,  0.0126,  ...,  0.0651,  0.0301,  0.0301],
          [-0.1450, -0.1275,  0.0301,  ...,  0.0476,  0.0126, -0.0049],
          ...,
          [-1.4055, -1.3004, -1.2479,  ..., -1.5980, -1.6331, -1.5980],
          [-1.3880, -1.3529, -1.3004,  ..., -1.4755, -1.5455, -1.4405],
          [-1.4055, -1.4055, -1.3529,  ..., -1.4405, -1.4580, -1.4405]],

         [[ 1.1237,  1.1934,  1.2282,  ...,  1.4374,  1.5071,  1.5245],
          [ 1.0888,  1.2108,  1.2980,  ...,  1.5420,  1.5071,  1.4897],
          [ 1.1062,  1.1585,  1.3154,  ...,  1.5245,  1.4722,  1.4548],
          ...,
          [-1.2293, -1.0898, -1.1073,  ..., -1.4210, -1.4384, -1.4036],
          [-1.1944, -1.1247, -1.1596,  ..., -1.2816, -1.3513, -1.2467],
          [-1.2119, -1.1944, -1.2119,  ..., -1.2467, -1.2641, -1.2467]]],


        [[[-1.6898, -1.6555, -1.6213,  ..., -1.9295, -1.9467, -1.9467],
          [-1.6727, -1.6384, -1.6042,  ..., -1.9295, -1.9467, -1.9467],
          [-1.6555, -1.6213, -1.5870,  ..., -1.9295, -1.9467, -1.9467],
          ...,
          [-1.8097, -1.3987, -1.4672,  ..., -1.9467, -1.9124, -1.9467],
          [-1.8610, -1.8097, -1.6384,  ..., -1.9467, -1.9124, -1.9467],
          [-1.7925, -1.8439, -1.9124,  ..., -1.9638, -1.9467, -1.9124]],

         [[-1.5980, -1.5630, -1.5280,  ..., -1.4055, -1.4580, -1.4755],
          [-1.5805, -1.5455, -1.5105,  ..., -1.3880, -1.4405, -1.4580],
          [-1.5630, -1.5280, -1.4930,  ..., -1.3704, -1.4230, -1.4230],
          ...,
          [-1.9307, -1.6155, -1.7206,  ..., -1.9132, -1.8782, -1.9132],
          [-1.8957, -1.9307, -1.7731,  ..., -1.9132, -1.8782, -1.9132],
          [-1.7731, -1.8957, -1.9482,  ..., -1.9307, -1.9132, -1.8782]],

         [[-0.9504, -0.9156, -0.8807,  ..., -0.4973, -0.5670, -0.6018],
          [-0.9330, -0.8981, -0.8633,  ..., -0.4624, -0.5321, -0.5844],
          [-0.9156, -0.8807, -0.8458,  ..., -0.4275, -0.4973, -0.5321],
          ...,
          [-1.7173, -1.5953, -1.6999,  ..., -1.7696, -1.7347, -1.7696],
          [-1.6824, -1.6650, -1.5081,  ..., -1.7696, -1.7347, -1.7696],
          [-1.5779, -1.5430, -1.6127,  ..., -1.7870, -1.7696, -1.7347]]],


        [[[ 0.8447,  0.8447,  0.8104,  ...,  0.2282,  0.1597,  0.1939],
          [ 0.8447,  0.8618,  0.8447,  ...,  0.2282,  0.1939,  0.2111],
          [ 0.8447,  0.8618,  0.8618,  ...,  0.2111,  0.2453,  0.2453],
          ...,
          [ 0.6563,  0.8447,  0.7933,  ...,  2.2318,  2.2489,  2.2318],
          [ 0.9132,  0.9132,  0.8618,  ...,  2.2489,  2.2489,  2.2147],
          [ 1.0159,  1.0331,  1.0844,  ...,  2.2489,  2.2147,  2.2318]],

         [[ 1.4132,  1.4132,  1.4132,  ...,  1.1155,  1.0805,  1.1155],
          [ 1.4132,  1.4307,  1.4307,  ...,  1.0980,  1.0980,  1.1155],
          [ 1.4132,  1.4307,  1.4307,  ...,  1.0805,  1.0980,  1.0980],
          ...,
          [ 0.1702,  0.3803,  0.3627,  ...,  2.0434,  2.0609,  2.0609],
          [ 0.4503,  0.4678,  0.4503,  ...,  2.0609,  2.0609,  2.0084],
          [ 0.5903,  0.6078,  0.6779,  ...,  2.0609,  2.0259,  2.0609]],

         [[ 1.6640,  1.6640,  1.6465,  ...,  1.3851,  1.3502,  1.3851],
          [ 1.6640,  1.6814,  1.6814,  ...,  1.3851,  1.3677,  1.3851],
          [ 1.6640,  1.6814,  1.6814,  ...,  1.3502,  1.3851,  1.3851],
          ...,
          [-0.5670, -0.4798, -0.5670,  ...,  1.4374,  1.4722,  1.4548],
          [-0.5495, -0.6193, -0.6541,  ...,  1.4548,  1.4548,  1.4025],
          [-0.6018, -0.6367, -0.5495,  ...,  1.4548,  1.4200,  1.4548]]],


        ...,


        [[[ 0.3309,  0.3481,  0.3652,  ...,  0.5022,  0.4679, -0.0287],
          [ 0.3309,  0.3481,  0.3481,  ...,  0.5022,  0.5022,  0.0056],
          [ 0.3309,  0.3309,  0.3481,  ...,  0.4851,  0.4851, -0.0116],
          ...,
          [-2.0494, -2.0494, -2.0665,  ..., -2.0494, -2.0494, -2.0665],
          [-2.0494, -2.0494, -2.0665,  ..., -2.0494, -2.0494, -2.0665],
          [-2.0665, -2.0665, -2.0665,  ..., -2.0494, -2.0494, -2.0665]],

         [[ 0.1877,  0.2052,  0.2227,  ...,  0.3627,  0.3277, -0.0749],
          [ 0.1877,  0.2052,  0.2052,  ...,  0.3627,  0.3627, -0.0574],
          [ 0.1877,  0.1877,  0.2052,  ...,  0.3452,  0.3277, -0.0749],
          ...,
          [-1.9657, -1.9657, -1.9832,  ..., -1.9657, -1.9657, -1.9832],
          [-1.9657, -1.9657, -1.9832,  ..., -1.9657, -1.9657, -1.9832],
          [-1.9832, -1.9832, -1.9832,  ..., -1.9657, -1.9657, -1.9832]],

         [[ 0.4265,  0.4439,  0.4614,  ...,  0.5659,  0.5485,  0.1128],
          [ 0.4265,  0.4439,  0.4439,  ...,  0.5834,  0.5834,  0.1476],
          [ 0.4265,  0.4265,  0.4439,  ...,  0.5659,  0.5485,  0.1302],
          ...,
          [-1.7347, -1.7347, -1.7522,  ..., -1.7347, -1.7347, -1.7522],
          [-1.7347, -1.7347, -1.7522,  ..., -1.7347, -1.7347, -1.7522],
          [-1.7522, -1.7522, -1.7522,  ..., -1.7347, -1.7347, -1.7522]]],


        [[[ 0.6734,  0.6906,  0.7248,  ...,  1.2385,  1.2214,  1.2043],
          [ 0.6906,  0.7077,  0.7248,  ...,  1.2728,  1.2385,  1.2214],
          [ 0.6906,  0.7077,  0.7248,  ...,  1.2728,  1.2385,  1.2214],
          ...,
          [-1.0390, -0.3883, -1.1589,  ..., -1.0390, -1.0904, -1.1932],
          [-0.9705, -0.5596, -1.0562,  ..., -1.1247, -1.1247, -1.0733],
          [-0.6281, -0.3369, -0.9020,  ..., -1.1589, -1.1932, -1.2617]],

         [[ 1.0805,  1.0980,  1.1331,  ...,  1.6933,  1.6758,  1.6583],
          [ 1.0980,  1.1155,  1.1331,  ...,  1.7283,  1.6933,  1.6758],
          [ 1.0980,  1.1155,  1.1331,  ...,  1.7283,  1.6933,  1.6758],
          ...,
          [-1.1078, -0.4251, -1.1429,  ..., -1.0203, -1.0553, -1.1604],
          [-1.0203, -0.6001, -1.0553,  ..., -1.0903, -1.0903, -1.0378],
          [-0.6702, -0.3550, -0.8803,  ..., -1.1078, -1.1429, -1.2479]],

         [[ 1.8383,  1.8557,  1.8905,  ...,  2.4308,  2.4134,  2.3960],
          [ 1.8557,  1.8731,  1.8905,  ...,  2.4657,  2.4308,  2.4134],
          [ 1.8557,  1.8731,  1.8905,  ...,  2.4657,  2.4308,  2.4134],
          ...,
          [-1.0724, -0.3578, -1.1596,  ..., -1.4036, -1.4559, -1.4733],
          [-1.0376, -0.5495, -1.0898,  ..., -1.5256, -1.5256, -1.4036],
          [-0.7064, -0.3404, -0.9330,  ..., -1.5430, -1.5779, -1.5953]]],


        [[[ 0.6392,  0.6563,  0.6906,  ...,  0.8447,  0.8447,  0.8789],
          [ 0.6563,  0.6221,  0.6049,  ...,  0.8276,  0.8447,  0.8789],
          [ 0.6734,  0.6734,  0.6049,  ...,  0.8276,  0.8447,  0.8618],
          ...,
          [-1.7583, -1.8097, -1.7583,  ..., -2.0494, -2.0494, -2.0837],
          [-1.7069, -1.7583, -1.7412,  ..., -2.0665, -2.0837, -2.0837],
          [-1.7069, -1.6898, -1.6042,  ..., -2.0665, -2.0665, -2.0323]],

         [[ 1.0980,  1.1155,  1.1506,  ...,  1.3256,  1.3256,  1.3606],
          [ 1.1155,  1.0805,  1.0630,  ...,  1.3081,  1.3256,  1.3606],
          [ 1.1681,  1.1681,  1.0980,  ...,  1.3081,  1.3256,  1.3431],
          ...,
          [-1.6681, -1.7206, -1.6681,  ..., -1.9657, -1.9657, -2.0007],
          [-1.6155, -1.6681, -1.6506,  ..., -1.9832, -2.0007, -2.0007],
          [-1.6155, -1.5980, -1.5105,  ..., -1.9832, -1.9832, -1.9482]],

         [[ 1.5245,  1.5420,  1.5768,  ...,  1.7860,  1.7860,  1.8208],
          [ 1.5420,  1.5071,  1.4897,  ...,  1.7685,  1.7860,  1.8208],
          [ 1.5768,  1.5768,  1.5071,  ...,  1.7685,  1.7860,  1.8034],
          ...,
          [-1.6476, -1.6650, -1.5779,  ..., -1.7696, -1.7696, -1.7870],
          [-1.5604, -1.5953, -1.5779,  ..., -1.7870, -1.7870, -1.8044],
          [-1.5256, -1.5430, -1.4907,  ..., -1.7870, -1.7696, -1.7522]]]])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
batch 4 loss: 0.0
torch.Size([32, 3, 256, 256])
tensor([[[[ 1.0502,  1.0502,  1.0502,  ...,  1.8208,  1.8208,  1.8037],
          [ 1.0502,  1.0673,  1.0844,  ...,  1.8208,  1.8208,  1.8037],
          [ 1.0502,  1.0673,  1.0673,  ...,  1.8208,  1.8208,  1.8037],
          ...,
          [-1.1075, -0.9363, -0.9705,  ..., -2.0494, -2.0837, -2.1179],
          [-0.9363, -0.6794, -0.6109,  ..., -2.1008, -2.1179, -2.0665],
          [-0.9020, -0.7993, -0.7137,  ..., -2.1179, -2.1179, -1.9980]],

         [[ 1.3256,  1.3256,  1.3256,  ...,  2.0434,  2.0434,  2.0259],
          [ 1.3256,  1.3431,  1.3606,  ...,  2.0434,  2.0434,  2.0259],
          [ 1.3256,  1.3431,  1.3431,  ...,  2.0434,  2.0434,  2.0259],
          ...,
          [-1.0378, -0.8803, -0.8627,  ..., -1.9307, -1.9657, -2.0007],
          [-0.9678, -0.7227, -0.6176,  ..., -2.0007, -2.0007, -1.9482],
          [-0.8627, -0.7927, -0.7577,  ..., -2.0357, -2.0357, -1.9132]],

         [[ 1.4200,  1.4200,  1.4200,  ...,  2.0997,  2.0997,  2.0823],
          [ 1.4200,  1.4374,  1.4548,  ...,  2.0997,  2.0997,  2.0823],
          [ 1.4200,  1.4374,  1.4374,  ...,  2.0997,  2.0997,  2.0823],
          ...,
          [-1.6999, -1.6824, -1.7173,  ..., -1.7522, -1.7870, -1.7870],
          [-1.7522, -1.6999, -1.6476,  ..., -1.7870, -1.8044, -1.7347],
          [-1.7696, -1.7522, -1.6824,  ..., -1.7696, -1.7870, -1.7173]]],


        [[[ 1.1187,  1.1015,  1.0844,  ...,  0.9817,  0.9303,  0.9303],
          [ 1.0502,  1.0331,  1.0159,  ...,  1.0502,  1.0331,  1.0331],
          [ 0.8961,  0.8276,  0.8447,  ...,  1.1358,  1.1358,  1.1358],
          ...,
          [-2.0837, -2.0323, -1.8268,  ..., -0.3712, -0.4397, -1.2788],
          [-2.0665, -2.0665, -1.8782,  ..., -0.7993, -1.1932, -1.4329],
          [-2.0494, -2.0837, -2.0323,  ..., -1.2617, -1.3130, -0.8849]],

         [[ 1.5707,  1.5357,  1.5182,  ...,  1.4307,  1.3957,  1.3782],
          [ 1.5182,  1.5007,  1.4832,  ...,  1.4657,  1.4482,  1.4482],
          [ 1.3957,  1.3256,  1.3431,  ...,  1.5357,  1.5357,  1.5357],
          ...,
          [-1.4405, -1.4055, -1.2129,  ..., -0.9328, -0.9853, -1.5805],
          [-1.4055, -1.4055, -1.2304,  ..., -1.2304, -1.4405, -1.5980],
          [-1.3704, -1.4055, -1.3704,  ..., -1.4405, -1.3880, -1.1779]],

         [[ 1.5594,  1.5245,  1.5071,  ...,  1.4374,  1.4025,  1.3851],
          [ 1.4897,  1.4722,  1.4548,  ...,  1.4897,  1.4722,  1.4722],
          [ 1.3502,  1.2805,  1.2980,  ...,  1.5245,  1.5245,  1.5245],
          ...,
          [-0.9853, -0.9504, -0.7587,  ..., -1.5081, -1.5081, -1.6999],
          [-0.9504, -0.9504, -0.7761,  ..., -1.6127, -1.6127, -1.6999],
          [-0.9330, -0.9678, -0.9330,  ..., -1.5779, -1.5081, -1.5081]]],


        [[[-1.0733, -1.0733, -1.0048,  ..., -1.1932, -1.0390, -0.8507],
          [-1.0562, -1.0562, -1.0904,  ..., -1.0390, -0.9020, -0.7822],
          [-0.9705, -1.0219, -1.1075,  ..., -0.8678, -0.8335, -0.8335],
          ...,
          [-0.9020, -0.7479, -1.0219,  ..., -0.7822, -0.7137, -0.7650],
          [ 0.2282, -0.0116, -0.9192,  ..., -0.8678, -0.8849, -0.9192],
          [ 1.8208,  0.5878, -0.9877,  ..., -0.7479, -0.8507, -0.8849]],

         [[-0.4951, -0.4951, -0.4251,  ..., -0.4776, -0.4076, -0.2850],
          [-0.4776, -0.4776, -0.5126,  ..., -0.3725, -0.3025, -0.2150],
          [-0.3901, -0.4426, -0.5301,  ..., -0.2675, -0.2500, -0.2325],
          ...,
          [-0.3901, -0.2150, -0.3025,  ..., -0.0399,  0.0301, -0.0224],
          [ 0.2052,  0.1702, -0.2850,  ..., -0.1450, -0.1625, -0.1975],
          [ 1.8158,  0.9755, -0.3550,  ..., -0.0749, -0.1800, -0.2150]],

         [[ 0.2522,  0.2522,  0.3045,  ...,  0.4091,  0.3916,  0.4265],
          [ 0.2696,  0.2696,  0.2348,  ...,  0.4439,  0.4614,  0.4614],
          [ 0.3568,  0.3045,  0.1999,  ...,  0.4614,  0.4265,  0.4091],
          ...,
          [ 0.1476,  0.4614,  0.2348,  ...,  0.5311,  0.5834,  0.5485],
          [ 0.9319,  1.1237,  0.3916,  ...,  0.4265,  0.4091,  0.3742],
          [ 2.2043,  1.7860,  0.2871,  ...,  0.4788,  0.3742,  0.3219]]],


        ...,


        [[[ 0.5364,  0.5364,  0.5364,  ..., -0.4054, -0.4054, -0.4397],
          [ 0.6049,  0.6049,  0.6049,  ..., -0.3883, -0.3883, -0.4054],
          [ 0.6734,  0.6734,  0.6563,  ..., -0.3712, -0.3541, -0.3883],
          ...,
          [-1.2103, -1.2103, -1.2274,  ..., -0.5596, -0.6452, -0.4739],
          [-1.2274, -1.2274, -1.2445,  ..., -1.2274, -1.1589, -0.9363],
          [-1.2445, -1.2445, -1.2617,  ..., -1.4843, -1.5870, -0.9192]],

         [[ 1.3256,  1.3256,  1.3081,  ...,  0.6078,  0.6078,  0.5728],
          [ 1.3606,  1.3606,  1.3431,  ...,  0.6254,  0.6254,  0.6078],
          [ 1.4132,  1.3957,  1.3957,  ...,  0.6429,  0.6604,  0.6254],
          ...,
          [-0.5126, -0.5126, -0.5301,  ..., -0.5301, -0.6877, -0.5476],
          [-0.5301, -0.5301, -0.5476,  ..., -1.2829, -1.1779, -0.9153],
          [-0.5476, -0.5476, -0.5651,  ..., -1.5630, -1.5630, -0.7927]],

         [[ 2.3263,  2.3263,  2.3088,  ...,  1.9603,  1.9603,  1.9254],
          [ 2.3437,  2.3437,  2.3437,  ...,  1.9777,  1.9777,  1.9603],
          [ 2.3786,  2.3611,  2.3611,  ...,  1.9951,  2.0125,  1.9777],
          ...,
          [ 0.7751,  0.7751,  0.7576,  ..., -0.4624, -0.6541, -0.5321],
          [ 0.7576,  0.7576,  0.7402,  ..., -1.0550, -1.1073, -0.9678],
          [ 0.7402,  0.7402,  0.7228,  ..., -1.3861, -1.3339, -0.5495]]],


        [[[-1.1247, -1.0904, -1.0562,  ..., -1.1418, -1.1418, -1.1418],
          [-1.0562, -1.0390, -1.0390,  ..., -1.1247, -1.1247, -1.1247],
          [-0.9877, -0.9877, -1.0048,  ..., -1.1075, -1.1075, -1.1075],
          ...,
          [ 0.4166,  0.5193,  0.4508,  ...,  0.4337,  0.3994,  0.6221],
          [ 0.5707,  0.5022,  0.4337,  ...,  0.4166,  0.4337,  0.5707],
          [ 0.5193,  0.5022,  0.2453,  ...,  0.3823,  0.4337,  0.6392]],

         [[ 0.0126,  0.0476,  0.0826,  ..., -0.1450, -0.1450, -0.1450],
          [ 0.0826,  0.1001,  0.1001,  ..., -0.1275, -0.1275, -0.1275],
          [ 0.1527,  0.1527,  0.1352,  ..., -0.1099, -0.1099, -0.1099],
          ...,
          [-0.8277, -0.6702, -0.6702,  ..., -0.6527, -0.6877, -0.5651],
          [-0.7402, -0.7052, -0.6352,  ..., -0.6877, -0.6702, -0.6176],
          [-0.8102, -0.7052, -0.7927,  ..., -0.7577, -0.6877, -0.5301]],

         [[ 1.8731,  1.9080,  1.9428,  ...,  1.6640,  1.6640,  1.6640],
          [ 1.9428,  1.9603,  1.9603,  ...,  1.6814,  1.6814,  1.6814],
          [ 2.0125,  2.0125,  1.9951,  ...,  1.6988,  1.6988,  1.6988],
          ...,
          [-1.4210, -1.4036, -1.3687,  ..., -1.2990, -1.3513, -1.2119],
          [-1.3513, -1.4384, -1.2816,  ..., -1.2816, -1.2641, -1.2990],
          [-1.4559, -1.4210, -1.3861,  ..., -1.2816, -1.2467, -1.2641]]],


        [[[ 0.7591,  0.7762,  0.7933,  ..., -2.0494, -1.8610, -1.7069],
          [ 0.7591,  0.7933,  0.8104,  ..., -2.1008, -1.9467, -1.9638],
          [ 0.7591,  0.7933,  0.8276,  ..., -2.0152, -1.9809, -2.0665],
          ...,
          [ 1.0844,  1.1187,  1.1187,  ...,  0.5536,  0.8618,  0.7077],
          [ 1.1187,  1.1529,  1.1187,  ...,  1.1358,  1.1529,  1.0159],
          [ 1.0673,  1.0844,  1.0844,  ...,  1.1529,  1.1529,  1.2043]],

         [[ 1.4482,  1.4657,  1.4832,  ..., -1.8606, -1.3179, -1.0728],
          [ 1.4482,  1.4832,  1.5007,  ..., -1.9482, -1.5280, -1.5805],
          [ 1.4482,  1.4832,  1.5182,  ..., -1.8957, -1.8081, -1.9307],
          ...,
          [ 1.2031,  1.2556,  1.2381,  ...,  0.8529,  1.0105,  0.9405],
          [ 1.2031,  1.2731,  1.2556,  ...,  1.2556,  1.2381,  1.2206],
          [ 1.1506,  1.2031,  1.1856,  ...,  1.1856,  1.2206,  1.3081]],

         [[ 2.2043,  2.2217,  2.2391,  ..., -1.6999, -1.5430, -1.5430],
          [ 2.2043,  2.2391,  2.2566,  ..., -1.7696, -1.7347, -1.6650],
          [ 2.2043,  2.2391,  2.2740,  ..., -1.7347, -1.7522, -1.6999],
          ...,
          [ 1.3328,  1.4374,  1.3851,  ...,  1.6291,  1.5245,  1.5071],
          [ 1.2980,  1.4722,  1.4200,  ...,  1.4200,  1.4548,  1.3677],
          [ 1.2457,  1.3154,  1.2980,  ...,  1.3502,  1.3851,  1.4374]]]])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
batch 5 loss: 0.0
torch.Size([32, 3, 256, 256])
tensor([[[[ 0.4337,  0.4337,  0.4508,  ...,  1.3755,  1.3584,  1.3584],
          [ 0.4337,  0.4337,  0.4508,  ...,  1.3755,  1.3584,  1.3584],
          [ 0.4337,  0.4508,  0.4679,  ...,  1.3755,  1.3584,  1.3584],
          ...,
          [ 0.0741,  0.1254,  0.1768,  ...,  0.4508,  0.3309,  0.0056],
          [ 0.0227,  0.1597,  0.1426,  ...,  0.3823,  0.2453, -0.0287],
          [-0.0116,  0.0056,  0.0741,  ...,  0.2282,  0.3823,  0.3481]],

         [[ 1.0455,  1.0455,  1.0630,  ...,  1.9034,  1.8859,  1.8859],
          [ 1.0280,  1.0280,  1.0630,  ...,  1.9034,  1.8859,  1.8859],
          [ 1.0280,  1.0455,  1.0630,  ...,  1.9034,  1.8859,  1.8859],
          ...,
          [ 0.2052,  0.2577,  0.3102,  ...,  0.0826,  0.0126, -0.2850],
          [ 0.1527,  0.2927,  0.2752,  ...,  0.0301, -0.0224, -0.2500],
          [ 0.1176,  0.1352,  0.2052,  ..., -0.1099,  0.1527,  0.2052]],

         [[ 2.0300,  2.0300,  2.0474,  ...,  2.6226,  2.6051,  2.6051],
          [ 2.0997,  2.0997,  2.1171,  ...,  2.6226,  2.6051,  2.6051],
          [ 2.1346,  2.1346,  2.1520,  ...,  2.6226,  2.6051,  2.6051],
          ...,
          [ 0.2871,  0.3393,  0.3916,  ..., -0.1138, -0.1835, -0.5147],
          [ 0.2348,  0.3742,  0.3568,  ..., -0.1312, -0.2184, -0.4624],
          [ 0.1999,  0.2173,  0.2871,  ..., -0.2358, -0.0092,  0.0256]]],


        [[[ 0.1083, -0.1143, -0.0972,  ...,  2.0948,  2.1633,  2.0605],
          [-0.0629, -0.0458, -0.0116,  ...,  1.6838,  2.1462,  2.1119],
          [-0.0629, -0.1143, -0.0801,  ...,  1.1872,  2.0092,  2.0948],
          ...,
          [-0.8849, -0.9363, -1.0219,  ...,  0.6734,  2.0777,  2.2318],
          [ 0.1768,  0.0741, -0.0972,  ...,  0.4337,  0.4337,  0.5707],
          [ 1.2214,  1.3070,  1.3584,  ..., -1.4672, -1.4672, -1.3815]],

         [[ 0.7829,  0.5553,  0.5728,  ...,  2.2535,  2.3585,  2.4286],
          [ 0.6078,  0.6254,  0.6604,  ...,  1.8158,  2.3235,  2.4111],
          [ 0.6078,  0.5553,  0.6078,  ...,  1.3256,  2.1485,  2.3585],
          ...,
          [-0.8627, -0.9328, -1.0203,  ...,  0.7304,  2.2185,  2.3936],
          [ 0.2402,  0.1352, -0.0399,  ...,  0.5378,  0.5553,  0.6954],
          [ 1.3081,  1.3957,  1.4482,  ..., -1.4055, -1.3880, -1.3004]],

         [[ 1.7860,  1.5768,  1.6117,  ...,  2.2914,  2.3088,  2.4308],
          [ 1.6291,  1.6465,  1.6988,  ...,  2.0300,  2.4134,  2.5529],
          [ 1.6291,  1.5768,  1.6465,  ...,  1.7860,  2.4308,  2.6226],
          ...,
          [-0.8110, -0.8633, -0.9678,  ...,  0.8274,  2.3786,  2.5529],
          [ 0.2696,  0.1825, -0.0092,  ...,  0.6705,  0.7054,  0.8448],
          [ 1.3502,  1.4374,  1.4897,  ..., -1.2467, -1.2467, -1.1421]]],


        [[[-1.7240, -1.6898, -1.7412,  ..., -1.1075, -1.3473, -1.5014],
          [-1.6213, -1.7240, -1.8439,  ..., -1.4158, -1.6555, -1.7240],
          [-1.5870, -1.6898, -1.7925,  ..., -1.7412, -1.7925, -1.7069],
          ...,
          [-1.0562, -0.9877, -1.0048,  ..., -1.7925, -1.8439, -1.8953],
          [-1.0733, -0.6281, -0.9705,  ..., -1.8610, -1.8268, -1.8610],
          [-0.8849, -0.4568, -0.8164,  ..., -1.8782, -1.8439, -1.7754]],

         [[-1.6155, -1.5805, -1.6331,  ..., -0.9678, -1.2304, -1.3704],
          [-1.5105, -1.6155, -1.7381,  ..., -1.2829, -1.5630, -1.6155],
          [-1.4755, -1.5805, -1.6856,  ..., -1.6506, -1.7031, -1.5980],
          ...,
          [-0.7927, -0.7752, -0.8978,  ..., -1.7206, -1.7731, -1.8256],
          [-0.9153, -0.4601, -0.8627,  ..., -1.7906, -1.7556, -1.7906],
          [-0.7227, -0.2850, -0.7052,  ..., -1.8081, -1.7731, -1.7031]],

         [[-1.4733, -1.4384, -1.4907,  ..., -1.0027, -1.1944, -1.2990],
          [-1.3687, -1.4733, -1.5953,  ..., -1.2119, -1.4384, -1.4559],
          [-1.3339, -1.4384, -1.5430,  ..., -1.4733, -1.5256, -1.4384],
          ...,
          [-1.0201, -0.9678, -1.0376,  ..., -1.5604, -1.6302, -1.6824],
          [-1.0550, -0.6018, -0.9853,  ..., -1.6476, -1.6127, -1.6476],
          [-0.8633, -0.4275, -0.8284,  ..., -1.6650, -1.6302, -1.5604]]],


        ...,


        [[[ 1.9749,  1.9407,  1.9064,  ...,  1.0673,  1.0673,  1.0673],
          [ 1.9920,  1.9407,  1.8722,  ...,  1.0502,  1.0502,  1.0331],
          [ 1.9920,  1.9235,  1.8550,  ...,  1.0331,  0.9988,  0.9474],
          ...,
          [-1.3987, -1.5870, -1.6042,  ..., -0.0972, -0.3712, -0.6623],
          [-1.7069, -1.6213, -1.7412,  ..., -0.3712, -0.5082, -0.5424],
          [-1.6555, -1.5185, -1.5357,  ..., -0.5424, -0.3712,  0.0398]],

         [[ 2.1485,  2.1134,  2.0784,  ...,  1.2206,  1.2206,  1.2206],
          [ 2.1660,  2.1134,  2.0434,  ...,  1.2031,  1.2031,  1.1856],
          [ 2.1660,  2.0959,  2.0259,  ...,  1.1856,  1.1506,  1.0980],
          ...,
          [-1.3004, -1.4930, -1.5630,  ...,  0.0476, -0.2325, -0.5301],
          [-1.6155, -1.5280, -1.6856,  ..., -0.2325, -0.3901, -0.4251],
          [-1.5630, -1.4055, -1.4230,  ..., -0.4076, -0.2500,  0.1527]],

         [[ 2.3960,  2.3611,  2.3263,  ...,  1.4722,  1.4722,  1.4722],
          [ 2.4134,  2.3611,  2.2914,  ...,  1.4548,  1.4548,  1.4374],
          [ 2.4134,  2.3437,  2.2740,  ...,  1.4374,  1.4025,  1.3502],
          ...,
          [-1.2119, -1.4036, -1.4559,  ..., -0.1138, -0.2532, -0.4101],
          [-1.5430, -1.4733, -1.5953,  ..., -0.3055, -0.4101, -0.3578],
          [-1.5430, -1.4036, -1.4210,  ..., -0.5147, -0.3927,  0.0082]]],


        [[[-0.0801, -0.0801, -0.0801,  ..., -0.0972, -0.0972, -0.0972],
          [-0.0801, -0.0801, -0.0801,  ..., -0.0972, -0.0972, -0.0972],
          [-0.0801, -0.0801, -0.0801,  ..., -0.0972, -0.0972, -0.0972],
          ...,
          [-1.3987, -1.3302, -1.2103,  ..., -0.9363, -0.8507, -0.7479],
          [-1.2959, -1.2103, -1.1932,  ..., -1.0390, -0.9192, -0.7308],
          [-1.3987, -1.6213, -1.4843,  ..., -0.9363, -0.7993, -1.1247]],

         [[ 0.1352,  0.1352,  0.1352,  ...,  0.1702,  0.1702,  0.1702],
          [ 0.1352,  0.1352,  0.1352,  ...,  0.1702,  0.1702,  0.1702],
          [ 0.1352,  0.1352,  0.1352,  ...,  0.1702,  0.1702,  0.1702],
          ...,
          [-0.8978, -0.7752, -0.6352,  ..., -0.3550, -0.3901, -0.3725],
          [-0.7052, -0.6352, -0.6527,  ..., -0.5651, -0.4076, -0.2850],
          [-0.7752, -1.0378, -0.9503,  ..., -0.5651, -0.2500, -0.4951]],

         [[ 0.6879,  0.6879,  0.6879,  ...,  0.7228,  0.7228,  0.7228],
          [ 0.6879,  0.6879,  0.6879,  ...,  0.7228,  0.7228,  0.7228],
          [ 0.6879,  0.6879,  0.6879,  ...,  0.7228,  0.7228,  0.7228],
          ...,
          [-1.6999, -1.7173, -1.6650,  ..., -1.6999, -1.6824, -1.6650],
          [-1.6476, -1.6302, -1.6127,  ..., -1.7173, -1.7173, -1.6302],
          [-1.6999, -1.6999, -1.6999,  ..., -1.6999, -1.6999, -1.7522]]],


        [[[-1.2617, -1.2617, -1.2617,  ..., -0.9877, -0.9877, -1.0048],
          [-1.2617, -1.2617, -1.2617,  ..., -0.9877, -0.9877, -1.0048],
          [-1.2617, -1.2617, -1.2617,  ..., -0.9705, -0.9877, -1.0048],
          ...,
          [-1.6727, -1.6555, -1.6727,  ..., -1.6727, -1.7069, -1.7583],
          [-1.6898, -1.6727, -1.6898,  ..., -1.6384, -1.6213, -1.6555],
          [-1.6727, -1.6898, -1.7240,  ..., -1.6213, -1.6042, -1.5870]],

         [[-1.1779, -1.1779, -1.1779,  ..., -1.0203, -1.0203, -1.0378],
          [-1.1779, -1.1779, -1.1779,  ..., -1.0203, -1.0203, -1.0378],
          [-1.1779, -1.1779, -1.1779,  ..., -1.0203, -1.0203, -1.0378],
          ...,
          [-1.5105, -1.4930, -1.5280,  ..., -1.5105, -1.5455, -1.5980],
          [-1.5280, -1.5105, -1.5280,  ..., -1.4755, -1.4580, -1.4930],
          [-1.5105, -1.5280, -1.5630,  ..., -1.4580, -1.4405, -1.4230]],

         [[-0.6367, -0.6367, -0.6367,  ..., -0.4275, -0.4275, -0.4450],
          [-0.6367, -0.6367, -0.6367,  ..., -0.4275, -0.4275, -0.4450],
          [-0.6367, -0.6367, -0.6367,  ..., -0.4275, -0.4275, -0.4450],
          ...,
          [-1.0898, -1.0724, -1.1247,  ..., -1.0724, -1.1247, -1.1770],
          [-1.1073, -1.0898, -1.1247,  ..., -1.0376, -1.0376, -1.0550],
          [-1.0898, -1.1073, -1.1596,  ..., -1.0027, -0.9853, -0.9678]]]])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
batch 6 loss: 0.0
torch.Size([32, 3, 256, 256])
tensor([[[[-0.0972, -0.0801, -0.0801,  ...,  0.6906,  0.6906,  0.7077],
          [-0.0972, -0.0801, -0.0801,  ...,  0.6906,  0.6906,  0.7077],
          [-0.1143, -0.0972, -0.0972,  ...,  0.6906,  0.6906,  0.6906],
          ...,
          [-1.2103, -1.2103, -1.2274,  ...,  1.3755,  1.3584,  1.3584],
          [-1.2103, -1.2103, -1.2274,  ...,  1.4098,  1.4098,  1.4098],
          [-1.2103, -1.2103, -1.2274,  ...,  1.4269,  1.4269,  1.4440]],

         [[ 0.1001,  0.1176,  0.1176,  ...,  0.7654,  0.7654,  0.7829],
          [ 0.1001,  0.1176,  0.1176,  ...,  0.7654,  0.7654,  0.7829],
          [ 0.0826,  0.1001,  0.1001,  ...,  0.7654,  0.7654,  0.7654],
          ...,
          [-0.9853, -0.9853, -0.9853,  ...,  1.4832,  1.4657,  1.4657],
          [-0.9853, -0.9853, -0.9678,  ...,  1.5182,  1.5182,  1.5182],
          [-0.9853, -0.9853, -0.9678,  ...,  1.5357,  1.5357,  1.5532]],

         [[ 0.3393,  0.3568,  0.3568,  ...,  0.9319,  0.9319,  0.9494],
          [ 0.3393,  0.3568,  0.3568,  ...,  0.9319,  0.9319,  0.9494],
          [ 0.3219,  0.3393,  0.3393,  ...,  0.9319,  0.9319,  0.9319],
          ...,
          [-0.6193, -0.6193, -0.6193,  ...,  1.5942,  1.5594,  1.5594],
          [-0.6193, -0.6193, -0.6193,  ...,  1.6291,  1.6117,  1.6117],
          [-0.6193, -0.6193, -0.6193,  ...,  1.6465,  1.6291,  1.6465]]],


        [[[ 2.2147,  2.2147,  2.2318,  ..., -0.6965, -0.7137, -0.7308],
          [ 2.2147,  2.2147,  2.2318,  ..., -0.7137, -0.7137, -0.7308],
          [ 2.2318,  2.2147,  2.2318,  ..., -0.6965, -0.6965, -0.7308],
          ...,
          [-1.7583, -1.6213, -1.7754,  ...,  0.2111, -0.7993, -1.6555],
          [-1.7925, -1.7412, -1.8439,  ...,  0.0227,  0.4851,  0.4679],
          [-1.7925, -1.8097, -1.8268,  ..., -1.3987, -0.5082,  0.1939]],

         [[ 2.4286,  2.4286,  2.4286,  ...,  0.4678,  0.4153,  0.3978],
          [ 2.4286,  2.4286,  2.4286,  ...,  0.4853,  0.4503,  0.4328],
          [ 2.4286,  2.4286,  2.4286,  ...,  0.5378,  0.5203,  0.5028],
          ...,
          [-2.0357, -2.0007, -1.9832,  ..., -0.3025, -1.0203, -1.7206],
          [-2.0182, -2.0182, -1.9657,  ..., -1.1954, -0.6001, -0.2325],
          [-2.0182, -2.0182, -1.9832,  ..., -1.7731, -1.5280, -1.2654]],

         [[ 2.6226,  2.6226,  2.6226,  ...,  2.6051,  2.5877,  2.5703],
          [ 2.6226,  2.6226,  2.6226,  ...,  2.5703,  2.5703,  2.5529],
          [ 2.6400,  2.6226,  2.6226,  ...,  2.5703,  2.5703,  2.5529],
          ...,
          [-1.8044, -1.7696, -1.7522,  ..., -0.8284, -1.2119, -1.5256],
          [-1.7870, -1.7696, -1.7522,  ..., -1.2816, -0.9330, -0.7936],
          [-1.7870, -1.7870, -1.6999,  ..., -1.6476, -1.5081, -1.5081]]],


        [[[-0.7137, -0.6965, -0.6965,  ..., -0.7308, -0.7308, -0.7137],
          [-0.7137, -0.6965, -0.6965,  ..., -0.7308, -0.7308, -0.7137],
          [-0.7137, -0.7137, -0.6965,  ..., -0.7137, -0.6965, -0.7137],
          ...,
          [-0.5938, -0.5767, -0.5767,  ..., -0.7822, -0.7308, -0.8335],
          [-0.6623, -0.6623, -0.6109,  ..., -0.7993, -0.7308, -1.1589],
          [-0.6452, -0.6623, -0.6623,  ..., -1.2617, -0.8849, -1.5185]],

         [[-0.0924, -0.0749, -0.0749,  ..., -0.1975, -0.2150, -0.1975],
          [-0.0924, -0.0749, -0.0749,  ..., -0.1975, -0.2150, -0.1975],
          [-0.0924, -0.0924, -0.0749,  ..., -0.1800, -0.1800, -0.1975],
          ...,
          [-0.1975, -0.1800, -0.1975,  ..., -0.3550, -0.3550, -0.5826],
          [-0.2500, -0.2500, -0.2150,  ..., -0.4251, -0.3901, -1.0028],
          [-0.2325, -0.2500, -0.2675,  ..., -0.9678, -0.5826, -1.3880]],

         [[ 0.6879,  0.7054,  0.7054,  ...,  0.7228,  0.7228,  0.7402],
          [ 0.6879,  0.7054,  0.7054,  ...,  0.7228,  0.7228,  0.7402],
          [ 0.6879,  0.6879,  0.7054,  ...,  0.7576,  0.7576,  0.7402],
          ...,
          [ 0.3393,  0.3568,  0.3568,  ...,  0.4265,  0.4265,  0.1128],
          [ 0.2871,  0.2871,  0.3219,  ...,  0.2522,  0.3219, -0.4450],
          [ 0.3045,  0.2871,  0.2871,  ..., -0.4624,  0.0605, -0.9330]]],


        ...,


        [[[-2.0323, -2.0494, -2.0494,  ..., -2.0494, -1.9980, -2.1179],
          [-2.0494, -2.0665, -2.0494,  ..., -2.0323, -1.9809, -2.1008],
          [-2.0494, -2.0494, -2.0494,  ..., -2.0494, -1.9809, -2.1008],
          ...,
          [ 2.1804,  2.1290,  1.7352,  ..., -1.9809, -1.5870, -1.9638],
          [ 2.1975,  2.0605,  1.8550,  ..., -1.3644,  0.0056, -1.3815],
          [ 2.1975,  2.0092,  2.0777,  ..., -0.0116,  1.3927, -0.1486]],

         [[-1.9307, -1.9482, -1.9482,  ..., -1.9482, -1.8957, -2.0182],
          [-1.9482, -1.9657, -1.9482,  ..., -1.9482, -1.8782, -2.0182],
          [-1.9482, -1.9482, -1.9482,  ..., -1.9482, -1.8957, -2.0182],
          ...,
          [ 2.3761,  2.1835,  1.6933,  ..., -1.8782, -1.6155, -1.9832],
          [ 2.3936,  2.1485,  1.9209,  ..., -1.6681, -0.3375, -1.8256],
          [ 2.3585,  2.2885,  2.2360,  ..., -0.5126,  1.2556, -0.9853]],

         [[-1.6650, -1.6824, -1.6824,  ..., -1.7870, -1.7347, -1.8044],
          [-1.6824, -1.6999, -1.6824,  ..., -1.7870, -1.7347, -1.8044],
          [-1.6824, -1.6824, -1.6824,  ..., -1.7870, -1.7347, -1.8044],
          ...,
          [ 2.5529,  1.8905,  0.0605,  ..., -1.6999, -1.3687, -1.6650],
          [ 2.3437,  1.5071,  0.4265,  ..., -1.4036, -0.2707, -1.6302],
          [ 2.3786,  1.5768,  1.5245,  ..., -1.0376,  1.0191, -1.1770]]],


        [[[ 2.1975,  2.1975,  2.1975,  ...,  1.9749,  1.9578,  1.9235],
          [ 2.1804,  2.2147,  2.1975,  ...,  1.9578,  1.9235,  1.8893],
          [ 2.0948,  2.1804,  2.1975,  ...,  1.9407,  1.9064,  1.8550],
          ...,
          [-0.5424, -0.2684, -0.3541,  ..., -1.3987, -1.1932, -1.4843],
          [-0.5082, -0.6794, -0.6623,  ..., -1.4500, -1.1418, -1.0904],
          [-0.6452, -0.7822, -0.9363,  ..., -1.7069, -1.0733, -0.1828]],

         [[ 2.3060,  2.3060,  2.3060,  ...,  1.9034,  1.8859,  1.8508],
          [ 2.2885,  2.3235,  2.3060,  ...,  1.8859,  1.8508,  1.8158],
          [ 2.2010,  2.2885,  2.3060,  ...,  1.8683,  1.8333,  1.7808],
          ...,
          [-0.6352, -0.3901, -0.4776,  ..., -1.4755, -1.2654, -1.5280],
          [-0.5826, -0.7927, -0.7402,  ..., -1.4580, -1.2304, -1.1954],
          [-0.7577, -0.8803, -0.9678,  ..., -1.6506, -1.1604, -0.3725]],

         [[ 2.5006,  2.5006,  2.5006,  ...,  2.0648,  2.0474,  2.0125],
          [ 2.4831,  2.5180,  2.5006,  ...,  2.0474,  2.0125,  1.9777],
          [ 2.3960,  2.4831,  2.5006,  ...,  2.0300,  1.9951,  1.9428],
          ...,
          [-1.1596, -0.6541, -0.7413,  ..., -1.6302, -1.4733, -1.6824],
          [-1.1421, -1.1247, -1.0724,  ..., -1.5953, -1.4036, -1.3687],
          [-1.2816, -1.2467, -1.3164,  ..., -1.7173, -1.3513, -0.6541]]],


        [[[-1.6555, -1.6555, -1.6384,  ..., -1.9809, -1.9638, -1.9638],
          [-1.6555, -1.6555, -1.6384,  ..., -1.9809, -1.9638, -1.9295],
          [-1.6555, -1.6555, -1.6384,  ..., -1.9809, -1.9467, -1.9124],
          ...,
          [-1.2788, -1.3987, -1.4158,  ..., -0.8849, -0.9705, -0.9877],
          [-1.8097, -1.2445, -0.1657,  ..., -0.4226, -0.3369, -0.7650],
          [-1.8610, -0.3198,  1.0331,  ..., -0.4739, -0.6623, -0.7308]],

         [[-1.3880, -1.3704, -1.3354,  ..., -1.7731, -1.7556, -1.7556],
          [-1.3880, -1.3704, -1.3354,  ..., -1.7731, -1.7556, -1.7206],
          [-1.3880, -1.3704, -1.3354,  ..., -1.7731, -1.7381, -1.7031],
          ...,
          [-1.4055, -1.4055, -1.5980,  ..., -1.4055, -1.3179, -1.2304],
          [-1.8606, -1.3004, -0.4951,  ..., -0.9503, -0.7402, -1.0203],
          [-1.8431, -0.3550,  0.6078,  ..., -0.7927, -0.8102, -0.6352]],

         [[-0.3055, -0.2358, -0.1138,  ..., -1.0898, -1.0724, -1.0724],
          [-0.3055, -0.2358, -0.1138,  ..., -1.0898, -1.0724, -1.0376],
          [-0.3055, -0.2358, -0.1138,  ..., -1.0898, -1.0550, -1.0201],
          ...,
          [-1.2816, -1.3513, -1.4907,  ..., -1.6127, -1.4907, -1.5430],
          [-1.6476, -1.2990, -0.7064,  ..., -1.4210, -1.0898, -1.4559],
          [-1.5779, -0.4973,  0.1128,  ..., -1.3687, -1.4733, -1.5430]]]])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
batch 7 loss: 0.0
torch.Size([32, 3, 256, 256])
tensor([[[[-0.0458, -0.0458, -0.2342,  ...,  1.3070,  1.3584,  1.3927],
          [-0.4397, -0.4568, -0.4226,  ...,  1.3070,  1.3242,  1.3413],
          [-0.0458, -0.0116, -0.1486,  ...,  1.3070,  1.3413,  1.3584],
          ...,
          [ 0.9303,  0.6221,  0.8447,  ...,  1.1872,  1.4098,  1.5468],
          [ 0.8789,  0.4679,  1.0159,  ...,  1.2557,  1.2728,  1.4098],
          [ 0.6392,  0.1254,  0.6049,  ...,  1.3070,  1.1529,  1.1358]],

         [[ 0.1001,  0.1702,  0.0651,  ...,  1.6933,  1.7458,  1.7808],
          [-0.4601, -0.4251, -0.3025,  ...,  1.6933,  1.7108,  1.7283],
          [-0.2325, -0.1275, -0.1975,  ...,  1.6933,  1.7283,  1.7458],
          ...,
          [ 1.0105,  0.6779,  0.8704,  ...,  0.8354,  1.0805,  1.2556],
          [ 0.9405,  0.5028,  1.0105,  ...,  0.9230,  0.9230,  1.0980],
          [ 0.6779,  0.1352,  0.5728,  ...,  0.9930,  0.8179,  0.7829]],

         [[ 0.0605,  0.0953, -0.0267,  ...,  2.4657,  2.5180,  2.5529],
          [-0.2010, -0.2184, -0.1312,  ...,  2.4657,  2.4831,  2.5006],
          [ 0.1825,  0.2348,  0.0953,  ...,  2.4657,  2.5006,  2.5180],
          ...,
          [ 0.6879,  0.3568,  0.5136,  ...,  0.8448,  1.1062,  1.2805],
          [ 0.6705,  0.2173,  0.6879,  ...,  0.9319,  0.9319,  1.0714],
          [ 0.4614, -0.1138,  0.2871,  ...,  1.0017,  0.7925,  0.7228]]],


        [[[-1.5528, -1.5870, -1.6555,  ..., -0.9363, -0.9020, -0.9020],
          [-1.6213, -1.6042, -1.6727,  ..., -0.9363, -0.9020, -0.9020],
          [-1.6384, -1.6555, -1.6555,  ..., -0.9192, -0.9020, -0.9020],
          ...,
          [-1.9295, -1.8782, -1.8610,  ..., -1.8268, -1.8097, -1.8610],
          [-1.7583, -1.7240, -1.7925,  ..., -1.7754, -1.8439, -1.9295],
          [-1.2274, -1.3815, -1.6042,  ..., -1.7925, -1.8953, -1.7754]],

         [[-0.8627, -0.8978, -0.9678,  ..., -0.7227, -0.6877, -0.7052],
          [-0.9328, -0.9328, -0.9853,  ..., -0.7227, -0.6877, -0.6877],
          [-0.9853, -1.0028, -1.0028,  ..., -0.6877, -0.6877, -0.6877],
          ...,
          [-1.8256, -1.7731, -1.7556,  ..., -1.7206, -1.7031, -1.7556],
          [-1.6331, -1.5980, -1.6681,  ..., -1.6681, -1.7381, -1.8256],
          [-1.0903, -1.2304, -1.4580,  ..., -1.6856, -1.7906, -1.6681]],

         [[-0.4275, -0.4624, -0.5321,  ..., -0.5321, -0.4624, -0.4275],
          [-0.4973, -0.4973, -0.5495,  ..., -0.5495, -0.4798, -0.4624],
          [-0.5321, -0.5495, -0.5495,  ..., -0.5670, -0.5147, -0.4798],
          ...,
          [-1.6824, -1.6476, -1.6302,  ..., -1.5953, -1.5779, -1.6302],
          [-1.5953, -1.5604, -1.6302,  ..., -1.5430, -1.6127, -1.6999],
          [-1.1247, -1.2816, -1.5081,  ..., -1.5604, -1.6650, -1.5430]]],


        [[[-0.8849, -0.9192, -0.9192,  ...,  0.5878,  0.6049,  0.6221],
          [-0.8678, -0.8849, -0.9020,  ...,  0.6049,  0.6221,  0.6221],
          [-0.8849, -0.8507, -0.8678,  ...,  0.6392,  0.6563,  0.6221],
          ...,
          [ 1.3755,  1.5639,  1.3927,  ...,  2.0434,  2.0434,  2.0434],
          [ 1.4954,  1.8550,  1.8379,  ...,  2.0434,  2.0434,  2.0434],
          [ 1.6324,  1.8379,  1.9749,  ...,  2.0434,  2.0434,  2.0434]],

         [[ 0.2227,  0.1877,  0.1877,  ...,  1.3256,  1.3431,  1.3606],
          [ 0.2402,  0.2227,  0.2052,  ...,  1.3431,  1.3606,  1.3606],
          [ 0.2227,  0.2577,  0.2402,  ...,  1.3782,  1.3957,  1.3606],
          ...,
          [ 1.6933,  1.7983,  1.6232,  ...,  2.2185,  2.2185,  2.2185],
          [ 1.7808,  2.0434,  2.0259,  ...,  2.2185,  2.2185,  2.2185],
          [ 1.8508,  1.9909,  2.1310,  ...,  2.2185,  2.2185,  2.2185]],

         [[ 1.4025,  1.3677,  1.3677,  ...,  2.1868,  2.2043,  2.2217],
          [ 1.4200,  1.4025,  1.3851,  ...,  2.2043,  2.2217,  2.2217],
          [ 1.4025,  1.4374,  1.4200,  ...,  2.2391,  2.2566,  2.2217],
          ...,
          [ 2.0648,  2.2043,  2.0300,  ...,  2.4308,  2.4308,  2.4308],
          [ 2.0823,  2.3960,  2.3786,  ...,  2.4308,  2.4308,  2.4308],
          [ 2.1171,  2.2740,  2.4134,  ...,  2.4308,  2.4308,  2.4308]]],


        ...,


        [[[-0.8335, -0.8335, -0.8164,  ..., -1.8268, -1.8268, -1.8268],
          [-0.8164, -0.8164, -0.7993,  ..., -1.7925, -1.8097, -1.8097],
          [-0.7993, -0.7993, -0.7993,  ..., -1.8097, -1.7925, -1.8097],
          ...,
          [-2.0665, -2.0494, -2.0665,  ..., -1.9295, -1.9809, -1.9124],
          [-2.0665, -2.0494, -2.0665,  ..., -1.9467, -1.9467, -1.9467],
          [-2.0665, -2.0837, -2.0665,  ..., -1.9295, -1.8782, -1.9467]],

         [[-0.2850, -0.2850, -0.2675,  ..., -1.3004, -1.3004, -1.3004],
          [-0.2675, -0.2675, -0.2500,  ..., -1.2654, -1.2829, -1.2829],
          [-0.2500, -0.2500, -0.2500,  ..., -1.2829, -1.2654, -1.2829],
          ...,
          [-1.9657, -1.9482, -1.9657,  ..., -1.8606, -1.9132, -1.8431],
          [-1.9657, -1.9482, -1.9657,  ..., -1.8782, -1.8782, -1.8782],
          [-1.9657, -1.9832, -1.9657,  ..., -1.8606, -1.8081, -1.8782]],

         [[ 0.4788,  0.4788,  0.4962,  ..., -0.5321, -0.5321, -0.5321],
          [ 0.4962,  0.4962,  0.5136,  ..., -0.4973, -0.5147, -0.5147],
          [ 0.5136,  0.5136,  0.5136,  ..., -0.5147, -0.4973, -0.5147],
          ...,
          [-1.6999, -1.6824, -1.6999,  ..., -1.6650, -1.7173, -1.6476],
          [-1.6999, -1.6824, -1.6999,  ..., -1.6824, -1.6824, -1.6824],
          [-1.6999, -1.7173, -1.6999,  ..., -1.6650, -1.6127, -1.6824]]],


        [[[ 1.3584,  1.2557,  1.1529,  ...,  0.6906,  0.6221,  0.6392],
          [ 1.3584,  1.2214,  1.0844,  ...,  0.7077,  0.6563,  0.7077],
          [ 1.3584,  1.1700,  1.0502,  ...,  0.7419,  0.6906,  0.7419],
          ...,
          [-0.9020, -0.9020, -1.3644,  ..., -0.9192, -0.6109, -0.6452],
          [-1.0562, -0.9192, -1.5014,  ..., -0.9020, -0.7137, -0.6965],
          [-1.3644, -1.0390, -1.3473,  ..., -0.8335, -0.7308, -0.8849]],

         [[ 1.6408,  1.5882,  1.4657,  ...,  0.9405,  0.8704,  0.8880],
          [ 1.6408,  1.5357,  1.3957,  ...,  0.9580,  0.9055,  0.9580],
          [ 1.6232,  1.4832,  1.3606,  ...,  0.9930,  0.9405,  0.9930],
          ...,
          [-0.9153, -0.9328, -1.4055,  ..., -0.9678, -0.6702, -0.7402],
          [-1.0378, -0.9503, -1.5280,  ..., -0.9853, -0.7927, -0.7927],
          [-1.3529, -1.0553, -1.3529,  ..., -0.9153, -0.8277, -0.9678]],

         [[ 2.0648,  2.0474,  1.9951,  ...,  1.4374,  1.3677,  1.3851],
          [ 2.0823,  2.0125,  1.9428,  ...,  1.4548,  1.4025,  1.4548],
          [ 2.0997,  1.9951,  1.9080,  ...,  1.4897,  1.4374,  1.4897],
          ...,
          [-1.3339, -1.2641, -1.6127,  ..., -1.4384, -1.3861, -1.4733],
          [-1.4907, -1.3339, -1.6127,  ..., -1.4384, -1.4559, -1.4384],
          [-1.6302, -1.5256, -1.5604,  ..., -1.4559, -1.4907, -1.5953]]],


        [[[-0.0116, -0.0458, -0.0287,  ...,  0.6906,  0.7591,  0.8104],
          [ 0.0056, -0.0116,  0.0056,  ...,  0.7591,  0.8276,  0.8618],
          [ 0.0056,  0.0056,  0.0398,  ...,  0.8789,  0.9132,  0.9988],
          ...,
          [ 0.1426,  0.5022,  0.4679,  ...,  0.3138,  0.0741,  0.0741],
          [ 0.3138,  0.3823,  0.2967,  ...,  0.1083, -0.0458, -0.0801],
          [ 0.2967,  0.3823,  0.5878,  ...,  0.1254,  0.1597, -0.1143]],

         [[ 0.2927,  0.2577,  0.2752,  ...,  0.9405,  1.0105,  1.0630],
          [ 0.3102,  0.2927,  0.3102,  ...,  1.0105,  1.0630,  1.1155],
          [ 0.3102,  0.3102,  0.3452,  ...,  1.1155,  1.1331,  1.2381],
          ...,
          [ 0.2577,  0.5553,  0.5728,  ...,  0.5553,  0.3102,  0.3102],
          [ 0.4503,  0.4853,  0.4503,  ...,  0.2577,  0.1352,  0.1877],
          [ 0.4503,  0.5028,  0.7829,  ...,  0.1527,  0.2752,  0.1176]],

         [[ 0.9842,  0.9494,  0.9668,  ...,  1.5420,  1.6117,  1.6640],
          [ 1.0017,  0.9842,  1.0017,  ...,  1.5768,  1.6291,  1.6814],
          [ 1.0017,  1.0017,  1.0365,  ...,  1.6640,  1.6988,  1.7860],
          ...,
          [-1.4036, -0.8284, -1.1247,  ..., -1.3861, -1.5604, -1.5953],
          [-1.4559, -1.1944, -1.5256,  ..., -1.4384, -1.5953, -1.5430],
          [-1.5430, -1.2990, -1.4036,  ..., -1.2641, -1.2990, -1.3513]]]])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
batch 8 loss: 0.0
torch.Size([32, 3, 256, 256])
tensor([[[[ 1.7694,  1.8037,  1.8379,  ...,  1.7352,  1.7180,  1.7180],
          [ 1.8037,  1.8037,  1.8208,  ...,  1.7352,  1.7180,  1.7180],
          [ 1.8037,  1.8037,  1.8037,  ...,  1.7523,  1.7352,  1.6838],
          ...,
          [-1.8953, -1.9638, -1.9467,  ..., -2.0152, -2.0837, -2.1008],
          [-1.9124, -1.9809, -1.9467,  ..., -2.0152, -2.0837, -2.1008],
          [-1.9124, -1.9809, -1.9809,  ..., -2.0494, -2.0837, -2.1008]],

         [[ 1.9559,  1.9909,  2.0259,  ...,  1.9559,  1.9384,  1.9384],
          [ 1.9909,  1.9909,  2.0084,  ...,  1.9559,  1.9384,  1.9384],
          [ 1.9909,  1.9909,  1.9909,  ...,  1.9734,  1.9559,  1.9034],
          ...,
          [-1.8606, -1.9657, -1.9482,  ..., -1.9307, -1.9832, -2.0182],
          [-1.8957, -1.9832, -1.9482,  ..., -1.9132, -1.9832, -2.0182],
          [-1.9307, -1.9832, -1.9482,  ..., -1.9132, -1.9832, -2.0007]],

         [[ 2.2391,  2.2740,  2.3088,  ...,  2.2740,  2.2391,  2.2391],
          [ 2.2740,  2.2740,  2.2914,  ...,  2.2740,  2.2391,  2.2391],
          [ 2.2740,  2.2740,  2.2740,  ...,  2.2740,  2.2566,  2.2043],
          ...,
          [-1.7173, -1.6476, -1.5953,  ..., -1.7347, -1.7870, -1.7870],
          [-1.6824, -1.6127, -1.6302,  ..., -1.7522, -1.8044, -1.7870],
          [-1.6127, -1.6302, -1.6476,  ..., -1.7522, -1.7870, -1.7696]]],


        [[[-0.0629,  0.4508,  0.5022,  ...,  0.5022,  0.4679, -0.0458],
          [ 1.0673,  2.1290,  2.1633,  ...,  2.1804,  2.1633,  1.0673],
          [ 1.0844,  2.1462,  2.1804,  ...,  2.1804,  2.1290,  1.1015],
          ...,
          [ 1.1015,  2.1975,  2.2147,  ...,  2.2147,  2.1975,  1.1015],
          [ 1.0502,  2.1462,  2.1633,  ...,  2.1804,  2.1462,  1.0673],
          [-0.0458,  0.4679,  0.4679,  ...,  0.5022,  0.5022, -0.0116]],

         [[ 0.0651,  0.5903,  0.6429,  ...,  0.6429,  0.6078,  0.0826],
          [ 1.2206,  2.3060,  2.3410,  ...,  2.3585,  2.3410,  1.2206],
          [ 1.2381,  2.3235,  2.3585,  ...,  2.3585,  2.3060,  1.2556],
          ...,
          [ 1.2556,  2.3761,  2.3936,  ...,  2.3936,  2.3761,  1.2556],
          [ 1.2031,  2.3235,  2.3410,  ...,  2.3585,  2.3235,  1.2206],
          [ 0.0826,  0.6078,  0.6078,  ...,  0.6429,  0.6429,  0.1176]],

         [[ 0.2871,  0.8099,  0.8622,  ...,  0.8622,  0.8274,  0.3045],
          [ 1.4374,  2.5180,  2.5529,  ...,  2.5703,  2.5529,  1.4374],
          [ 1.4548,  2.5354,  2.5703,  ...,  2.5703,  2.5180,  1.4722],
          ...,
          [ 1.4722,  2.5877,  2.6051,  ...,  2.6051,  2.5877,  1.4722],
          [ 1.4200,  2.5354,  2.5529,  ...,  2.5703,  2.5354,  1.4374],
          [ 0.3045,  0.8274,  0.8274,  ...,  0.8622,  0.8622,  0.3393]]],


        [[[-0.9534,  0.2796,  1.0673,  ..., -0.0629, -0.0801, -0.1143],
          [-0.0116,  0.4679,  1.1015,  ..., -0.0801, -0.1314, -0.1999],
          [-0.3198,  0.5193,  1.2385,  ..., -0.1657, -0.2342, -0.3541],
          ...,
          [-2.1179, -2.1179, -2.1179,  ..., -2.1179, -2.1179, -2.1179],
          [-2.1179, -2.1179, -2.1179,  ..., -2.1008, -2.1008, -2.1179],
          [-2.1179, -2.1179, -2.1179,  ..., -2.1008, -2.1008, -2.1179]],

         [[ 0.3978,  0.9405,  1.4132,  ...,  0.7479,  0.7829,  0.7479],
          [ 0.7479,  0.9580,  1.5007,  ...,  0.7479,  0.7304,  0.6604],
          [ 0.7304,  1.0280,  1.5357,  ...,  0.6954,  0.6254,  0.5028],
          ...,
          [-2.0357, -2.0357, -2.0357,  ..., -2.0357, -2.0357, -2.0357],
          [-2.0357, -2.0357, -2.0182,  ..., -2.0182, -2.0182, -2.0357],
          [-2.0357, -2.0357, -2.0182,  ..., -2.0182, -2.0182, -2.0357]],

         [[ 1.7511,  1.9080,  1.9254,  ...,  1.6640,  1.7337,  1.6988],
          [ 1.8731,  1.8208,  2.0125,  ...,  1.6988,  1.6814,  1.6117],
          [ 1.8208,  1.9777,  2.1346,  ...,  1.6814,  1.5768,  1.4548],
          ...,
          [-1.8044, -1.8044, -1.7870,  ..., -1.7870, -1.8044, -1.8044],
          [-1.8044, -1.8044, -1.7696,  ..., -1.7870, -1.7870, -1.8044],
          [-1.8044, -1.8044, -1.7696,  ..., -1.7870, -1.7870, -1.8044]]],


        ...,


        [[[-2.0837, -2.1008, -1.9980,  ..., -2.0323, -2.0494, -2.1008],
          [-2.0665, -2.1008, -2.0152,  ..., -2.0665, -2.0837, -2.0837],
          [-2.0323, -2.1008, -1.9809,  ..., -2.0665, -2.1008, -2.0837],
          ...,
          [-2.1179, -2.1179, -2.1008,  ..., -2.1008, -2.1179, -2.1179],
          [-2.1179, -2.1179, -2.1008,  ..., -2.0837, -2.0323, -2.0494],
          [-2.1179, -2.1179, -2.1008,  ..., -2.1008, -2.0665, -2.0837]],

         [[-2.0182, -2.0007, -2.0357,  ..., -2.0357, -2.0357, -2.0007],
          [-2.0182, -2.0007, -2.0357,  ..., -2.0357, -2.0357, -2.0182],
          [-2.0182, -1.9832, -2.0357,  ..., -2.0357, -2.0182, -2.0182],
          ...,
          [-2.0357, -2.0357, -2.0357,  ..., -2.0182, -2.0007, -2.0007],
          [-2.0357, -2.0357, -2.0357,  ..., -2.0357, -2.0357, -2.0357],
          [-2.0357, -2.0357, -2.0357,  ..., -2.0357, -2.0357, -2.0357]],

         [[-1.6999, -1.7522, -1.7696,  ..., -1.7173, -1.7522, -1.8044],
          [-1.7347, -1.7522, -1.7347,  ..., -1.7522, -1.7522, -1.8044],
          [-1.7696, -1.7522, -1.7522,  ..., -1.7696, -1.7522, -1.8044],
          ...,
          [-1.7347, -1.7522, -1.7870,  ..., -1.8044, -1.7870, -1.7522],
          [-1.7347, -1.7347, -1.7347,  ..., -1.7870, -1.7870, -1.7522],
          [-1.7870, -1.7870, -1.7696,  ..., -1.7870, -1.8044, -1.7870]]],


        [[[-1.6213, -1.6042, -1.6042,  ..., -1.6384, -1.6384, -1.6555],
          [-1.5870, -1.5699, -1.5699,  ..., -1.6042, -1.6213, -1.6555],
          [-1.5699, -1.5357, -1.5357,  ..., -1.6042, -1.6042, -1.6213],
          ...,
          [-0.7650, -1.2274, -1.2445,  ..., -0.2684,  0.2967,  0.8961],
          [-0.5082, -1.0048, -1.2445,  ..., -0.5082,  0.0912,  0.3823],
          [-0.7137, -1.2788, -1.2103,  ..., -0.3369,  0.7933,  0.1939]],

         [[-1.2654, -1.2479, -1.2304,  ..., -1.2479, -1.2479, -1.2654],
          [-1.2304, -1.2129, -1.1954,  ..., -1.2129, -1.2304, -1.2654],
          [-1.2129, -1.1779, -1.1604,  ..., -1.2129, -1.2129, -1.2304],
          ...,
          [-0.9153, -1.1604, -1.1604,  ..., -0.3200,  0.2227,  0.6954],
          [-0.6702, -0.9328, -1.1253,  ..., -0.5126,  0.0651,  0.2052],
          [-0.8452, -1.2654, -1.0728,  ..., -0.3200,  0.7479, -0.0749]],

         [[ 0.7228,  0.7402,  0.7576,  ...,  0.8274,  0.8274,  0.8099],
          [ 0.7576,  0.7751,  0.7925,  ...,  0.8622,  0.8448,  0.8099],
          [ 0.7751,  0.8099,  0.8099,  ...,  0.8622,  0.8622,  0.8448],
          ...,
          [-1.6650, -1.7173, -1.6824,  ..., -1.5430, -1.5779, -1.6127],
          [-1.5953, -1.6999, -1.6650,  ..., -1.6824, -1.6302, -1.5953],
          [-1.6476, -1.6650, -1.7173,  ..., -1.5953, -1.6127, -1.6302]]],


        [[[-2.1179, -2.1008, -2.1179,  ..., -2.1008, -2.1008, -2.1179],
          [-2.1179, -2.1008, -2.1179,  ..., -2.1008, -2.1008, -2.1179],
          [-2.1179, -2.1008, -2.1179,  ..., -2.1008, -2.1008, -2.1179],
          ...,
          [-1.6898, -1.6213, -1.8097,  ..., -1.7754, -1.7069, -1.6042],
          [-1.8610, -1.7412, -1.8268,  ..., -1.8610, -1.8097, -1.6555],
          [-1.9467, -1.8610, -1.8439,  ..., -1.8268, -1.8097, -1.6384]],

         [[-0.5826, -0.5476, -0.5126,  ..., -0.6352, -0.6176, -0.6527],
          [-0.5826, -0.5476, -0.5126,  ..., -0.6352, -0.6176, -0.6527],
          [-0.5826, -0.5476, -0.5126,  ..., -0.6352, -0.6176, -0.6527],
          ...,
          [-1.4755, -1.4230, -1.6155,  ..., -1.5630, -1.5105, -1.4055],
          [-1.6506, -1.5280, -1.6331,  ..., -1.6155, -1.6155, -1.4580],
          [-1.7556, -1.6681, -1.6506,  ..., -1.5805, -1.6155, -1.4405]],

         [[ 0.7925,  0.8274,  0.8274,  ...,  0.8622,  0.8099,  0.7751],
          [ 0.7925,  0.8274,  0.8274,  ...,  0.8622,  0.8274,  0.7925],
          [ 0.7925,  0.8274,  0.8274,  ...,  0.8622,  0.8448,  0.8099],
          ...,
          [-1.3687, -1.2641, -1.3861,  ..., -1.2816, -1.2467, -1.1944],
          [-1.5430, -1.3861, -1.4036,  ..., -1.3164, -1.3513, -1.2467],
          [-1.5953, -1.4733, -1.4384,  ..., -1.2641, -1.3687, -1.2293]]]])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
batch 9 loss: 0.0
torch.Size([32, 3, 256, 256])
tensor([[[[-1.8097, -1.8097, -1.7925,  ..., -1.7069, -1.9295, -1.8610],
          [-1.8097, -1.7925, -1.8097,  ..., -1.6898, -1.8097, -1.8268],
          [-1.6898, -1.6555, -1.8097,  ..., -1.7412, -1.7583, -1.7925],
          ...,
          [-1.1075, -1.1589, -1.3473,  ..., -1.4329, -1.4500, -1.5699],
          [-0.9877, -1.1075, -1.2274,  ..., -1.5014, -1.4329, -1.4500],
          [-1.2617, -1.0219, -0.9192,  ..., -1.2274, -1.1760, -1.1932]],

         [[-1.7731, -1.7731, -1.7556,  ..., -1.6856, -1.8606, -1.7906],
          [-1.7731, -1.7556, -1.7731,  ..., -1.6506, -1.7206, -1.7381],
          [-1.6506, -1.6155, -1.7731,  ..., -1.6856, -1.6681, -1.7031],
          ...,
          [-1.3529, -1.3880, -1.5455,  ..., -1.4580, -1.5630, -1.6506],
          [-1.3179, -1.4580, -1.5980,  ..., -1.6681, -1.6856, -1.5980],
          [-1.5280, -1.4405, -1.4405,  ..., -1.4930, -1.4930, -1.4230]],

         [[-1.6302, -1.6302, -1.6127,  ..., -1.5779, -1.7173, -1.6476],
          [-1.6476, -1.6302, -1.6476,  ..., -1.5779, -1.6302, -1.6302],
          [-1.5779, -1.5430, -1.7173,  ..., -1.6302, -1.6127, -1.6476],
          ...,
          [-1.3513, -1.3687, -1.4907,  ..., -1.3687, -1.4559, -1.5604],
          [-1.3513, -1.4384, -1.5256,  ..., -1.5953, -1.5779, -1.5256],
          [-1.4733, -1.4036, -1.3687,  ..., -1.4907, -1.4210, -1.3164]]],


        [[[-2.0494, -2.0494, -2.0494,  ..., -2.0494, -2.0494, -2.0494],
          [-2.0494, -2.0494, -2.0494,  ..., -2.0494, -2.0494, -2.0494],
          [-2.0494, -2.0494, -2.0494,  ..., -2.0494, -2.0494, -2.0494],
          ...,
          [-2.0494, -2.0494, -2.0494,  ..., -2.0494, -2.0494, -2.0494],
          [-2.0494, -2.0494, -2.0494,  ..., -2.0494, -2.0494, -2.0494],
          [-2.0494, -2.0494, -2.0494,  ..., -2.0494, -2.0494, -2.0494]],

         [[-1.9657, -1.9657, -1.9657,  ..., -1.9657, -1.9657, -1.9657],
          [-1.9657, -1.9657, -1.9657,  ..., -1.9657, -1.9657, -1.9657],
          [-1.9657, -1.9657, -1.9657,  ..., -1.9657, -1.9657, -1.9657],
          ...,
          [-1.9657, -1.9657, -1.9657,  ..., -1.9657, -1.9657, -1.9657],
          [-1.9657, -1.9657, -1.9657,  ..., -1.9657, -1.9657, -1.9657],
          [-1.9657, -1.9657, -1.9657,  ..., -1.9657, -1.9657, -1.9657]],

         [[-1.7347, -1.7347, -1.7347,  ..., -1.7347, -1.7347, -1.7347],
          [-1.7347, -1.7347, -1.7347,  ..., -1.7347, -1.7347, -1.7347],
          [-1.7347, -1.7347, -1.7347,  ..., -1.7347, -1.7347, -1.7347],
          ...,
          [-1.7347, -1.7347, -1.7347,  ..., -1.7347, -1.7347, -1.7347],
          [-1.7347, -1.7347, -1.7347,  ..., -1.7347, -1.7347, -1.7347],
          [-1.7347, -1.7347, -1.7347,  ..., -1.7347, -1.7347, -1.7347]]],


        [[[ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          ...,
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489]],

         [[ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          ...,
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286]],

         [[ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          ...,
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400]]],


        ...,


        [[[ 0.8618,  0.8447,  0.8789,  ...,  1.1700,  1.1872,  1.2043],
          [ 0.8961,  0.8961,  0.8961,  ...,  1.2043,  1.1872,  1.1872],
          [ 0.9303,  0.9474,  0.9303,  ...,  1.2043,  1.1872,  1.2214],
          ...,
          [-0.8849, -0.5082,  0.1939,  ...,  1.4783, -0.3541,  0.0569],
          [-0.5424, -0.6452, -0.1657,  ...,  1.2728,  0.2282, -0.0116],
          [-0.1828, -0.6965, -0.8678,  ...,  1.0502,  1.5297,  0.8618]],

         [[ 0.9930,  0.9755,  1.0105,  ...,  1.3081,  1.3256,  1.3431],
          [ 1.0280,  1.0280,  1.0280,  ...,  1.3431,  1.3256,  1.3256],
          [ 1.0630,  1.0805,  1.0630,  ...,  1.3431,  1.3256,  1.3606],
          ...,
          [-0.7752, -0.3901,  0.3277,  ...,  1.6408, -0.2325,  0.1877],
          [-0.4251, -0.5301, -0.0399,  ...,  1.4307,  0.3627,  0.1176],
          [-0.0574, -0.5826, -0.7577,  ...,  1.2031,  1.6933,  1.0105]],

         [[ 1.1411,  1.1237,  1.1585,  ...,  1.4548,  1.4722,  1.4897],
          [ 1.1759,  1.1759,  1.1759,  ...,  1.4897,  1.4722,  1.4722],
          [ 1.2108,  1.2282,  1.2108,  ...,  1.4897,  1.4722,  1.5071],
          ...,
          [-0.5844, -0.2010,  0.5136,  ...,  1.8208, -0.0441,  0.3742],
          [-0.2358, -0.3404,  0.1476,  ...,  1.6117,  0.5485,  0.3045],
          [ 0.1302, -0.3927, -0.5670,  ...,  1.3851,  1.8731,  1.1934]]],


        [[[-2.1179, -2.1179, -2.1179,  ...,  0.5536,  0.5536,  0.5707],
          [-2.1008, -2.1008, -2.1008,  ...,  0.5878,  0.5878,  0.5707],
          [-2.1179, -2.1008, -2.0837,  ...,  0.6049,  0.6049,  0.5878],
          ...,
          [-1.9809, -2.0323, -2.0494,  ..., -1.9638, -2.0494, -2.0665],
          [-2.0323, -2.0494, -2.0494,  ..., -1.9980, -2.0494, -2.0494],
          [-2.0837, -2.0494, -2.0837,  ..., -2.0837, -2.0837, -2.0837]],

         [[-0.1450, -0.1450, -0.1275,  ...,  1.4657,  1.4657,  1.4832],
          [-0.1275, -0.1099, -0.1099,  ...,  1.5007,  1.5007,  1.4832],
          [-0.1275, -0.1099, -0.0924,  ...,  1.5182,  1.5182,  1.5007],
          ...,
          [-0.7927, -0.8452, -0.8978,  ..., -1.6681, -1.7556, -1.7556],
          [-0.9853, -1.0728, -1.1078,  ..., -1.5980, -1.6681, -1.6856],
          [-1.2479, -1.2129, -1.2129,  ..., -1.6506, -1.5980, -1.5805]],

         [[ 0.6182,  0.6182,  0.6356,  ...,  1.6988,  1.6988,  1.7163],
          [ 0.6356,  0.6531,  0.6531,  ...,  1.7337,  1.7337,  1.7163],
          [ 0.6356,  0.6531,  0.6705,  ...,  1.7511,  1.7511,  1.7337],
          ...,
          [-0.2358, -0.2707, -0.3230,  ..., -1.6302, -1.6302, -1.6476],
          [-0.4624, -0.5147, -0.5495,  ..., -1.5604, -1.5953, -1.6127],
          [-0.7238, -0.7238, -0.6715,  ..., -1.6476, -1.6127, -1.5953]]],


        [[[-0.3883, -0.3541, -0.3369,  ..., -0.9534, -0.9534, -0.9534],
          [-0.4226, -0.3883, -0.3712,  ..., -0.9534, -0.9534, -0.9534],
          [-0.4568, -0.4397, -0.4226,  ..., -0.9705, -0.9705, -0.9705],
          ...,
          [-1.0219, -1.0219, -0.9534,  ..., -1.0048, -0.9534, -1.1760],
          [-1.1760, -0.9534, -0.9363,  ..., -1.0562, -1.3130, -1.4329],
          [-1.7412, -1.3302, -1.1075,  ..., -1.0390, -0.9705, -0.7822]],

         [[-0.2150, -0.1800, -0.1625,  ..., -0.8102, -0.8102, -0.8102],
          [-0.2500, -0.2150, -0.1975,  ..., -0.8102, -0.8102, -0.8102],
          [-0.2850, -0.2675, -0.2500,  ..., -0.8277, -0.8277, -0.8277],
          ...,
          [-0.9153, -0.9153, -0.8452,  ..., -0.9153, -0.8627, -1.0903],
          [-1.0728, -0.8452, -0.8277,  ..., -0.9503, -1.2304, -1.3354],
          [-1.6681, -1.2479, -1.0203,  ..., -0.9503, -0.8452, -0.6527]],

         [[ 0.3393,  0.3742,  0.3916,  ..., -0.1835, -0.1835, -0.1835],
          [ 0.3045,  0.3393,  0.3568,  ..., -0.1835, -0.1835, -0.1835],
          [ 0.2696,  0.2871,  0.3045,  ..., -0.2010, -0.2010, -0.2010],
          ...,
          [-0.4798, -0.4798, -0.4275,  ..., -0.5844, -0.5321, -0.7587],
          [-0.6715, -0.4450, -0.4101,  ..., -0.6193, -0.8981, -1.0201],
          [-1.3861, -0.9504, -0.6018,  ..., -0.5844, -0.5321, -0.3404]]]])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
batch 10 loss: 0.0
torch.Size([32, 3, 256, 256])
tensor([[[[-1.8439, -1.8439, -1.8439,  ..., -1.1932, -1.2445, -1.2445],
          [-1.8439, -1.8439, -1.8439,  ..., -1.2103, -1.2445, -1.2617],
          [-1.8439, -1.8439, -1.8439,  ..., -1.2445, -1.2617, -1.2959],
          ...,
          [-2.0323, -2.0323, -2.0323,  ..., -1.5014, -1.5357, -1.5699],
          [-2.0494, -2.0494, -2.0494,  ..., -1.5357, -1.5870, -1.6213],
          [-2.0494, -2.0494, -2.0494,  ..., -1.5699, -1.6213, -1.6384]],

         [[-1.3880, -1.3880, -1.3880,  ...,  0.0126, -0.0224, -0.0399],
          [-1.3880, -1.3880, -1.3880,  ...,  0.0301, -0.0049, -0.0224],
          [-1.3880, -1.3880, -1.3880,  ...,  0.0826,  0.0476,  0.0126],
          ...,
          [-1.9832, -1.9832, -1.9832,  ..., -1.6506, -1.6506, -1.6331],
          [-1.9832, -1.9832, -1.9832,  ..., -1.6681, -1.6331, -1.6331],
          [-1.9832, -1.9832, -1.9832,  ..., -1.6506, -1.6155, -1.6155]],

         [[-0.8633, -0.8633, -0.8284,  ...,  1.0017,  0.9668,  0.9494],
          [-0.8633, -0.8633, -0.8284,  ...,  1.0191,  0.9668,  0.9494],
          [-0.8633, -0.8458, -0.8284,  ...,  1.0365,  1.0017,  0.9668],
          ...,
          [-1.7347, -1.7347, -1.7347,  ..., -1.3861, -1.4036, -1.4036],
          [-1.7696, -1.7696, -1.7696,  ..., -1.4384, -1.4210, -1.4210],
          [-1.7870, -1.7870, -1.7870,  ..., -1.4559, -1.4384, -1.4210]]],


        [[[-0.3541,  0.3823,  0.6906,  ..., -0.2856, -0.4739, -0.6109],
          [ 0.1083,  0.3994,  0.1254,  ..., -0.4568, -0.4568, -0.6623],
          [-0.0116, -0.4397, -0.6623,  ..., -0.7479, -0.7479, -0.8164],
          ...,
          [-0.7822, -1.1589, -1.5014,  ..., -0.9020, -0.3027, -0.8164],
          [-0.8849, -0.9877, -1.1075,  ..., -0.6281, -0.6281, -1.3987],
          [-1.4672, -1.5357, -1.2788,  ..., -0.7650, -1.3302, -1.7754]],

         [[-0.1800,  0.4328,  0.7654,  ...,  0.2402,  0.1001, -0.0049],
          [ 0.2752,  0.5553,  0.2577,  ...,  0.1001,  0.1702, -0.0049],
          [ 0.3978, -0.1099, -0.4426,  ..., -0.2500, -0.1625, -0.1625],
          ...,
          [-0.0224, -0.5126, -1.0203,  ..., -0.5476, -0.0049, -0.5651],
          [-0.2675, -0.4951, -0.7052,  ..., -0.3550, -0.4951, -1.2479],
          [-1.0203, -1.1779, -0.8978,  ..., -0.3725, -1.1429, -1.5280]],

         [[-0.1138,  0.6356,  0.6879,  ..., -0.1835, -0.2010, -0.1312],
          [ 0.4265,  0.0779, -0.4798,  ..., -0.3753, -0.3055, -0.3753],
          [-0.2532, -0.8807, -0.8458,  ..., -0.6890, -0.7064, -0.7587],
          ...,
          [-0.8807, -1.2119, -1.4733,  ..., -1.1421, -0.6715, -0.8633],
          [-0.7936, -0.9330, -1.0550,  ..., -0.9853, -0.9678, -1.3861],
          [-1.1944, -1.3687, -1.1770,  ..., -0.7936, -1.2119, -1.3164]]],


        [[[ 1.9235,  1.9235,  1.9407,  ...,  1.5468,  1.5468,  1.5468],
          [ 1.9235,  1.9235,  1.9407,  ...,  1.5468,  1.5468,  1.5468],
          [ 1.8893,  1.9235,  1.9235,  ...,  1.5468,  1.5468,  1.5468],
          ...,
          [-1.7583, -1.7925, -1.7754,  ..., -2.1179, -2.1179, -2.1008],
          [-1.7925, -1.7925, -1.8097,  ..., -2.1179, -2.1179, -2.1008],
          [-1.7583, -1.7583, -1.7240,  ..., -2.1179, -2.1179, -2.1179]],

         [[ 2.2010,  2.2010,  2.2185,  ...,  1.9909,  1.9909,  1.9909],
          [ 2.2010,  2.2010,  2.2185,  ...,  1.9909,  1.9909,  1.9909],
          [ 2.1660,  2.2010,  2.2010,  ...,  1.9909,  1.9909,  1.9909],
          ...,
          [-1.3529, -1.3704, -1.3704,  ..., -1.1429, -1.1779, -1.1779],
          [-1.4230, -1.4230, -1.4405,  ..., -1.1779, -1.2129, -1.2129],
          [-1.4055, -1.4055, -1.3704,  ..., -1.2129, -1.2304, -1.2654]],

         [[ 2.6226,  2.6226,  2.6400,  ...,  2.6051,  2.6051,  2.6051],
          [ 2.6226,  2.6226,  2.6400,  ...,  2.6051,  2.6051,  2.6051],
          [ 2.5877,  2.6226,  2.6226,  ...,  2.6051,  2.6051,  2.6051],
          ...,
          [-0.8110, -0.8458, -0.8458,  ..., -0.4798, -0.5147, -0.5147],
          [-0.8633, -0.8633, -0.8807,  ..., -0.5147, -0.5321, -0.5321],
          [-0.8458, -0.8458, -0.8110,  ..., -0.5495, -0.5495, -0.5670]]],


        ...,


        [[[ 1.0673,  1.1187,  1.1700,  ...,  1.3070,  1.1358,  0.8789],
          [ 0.9474,  0.9817,  1.0331,  ...,  1.2728,  1.0673,  0.7933],
          [ 0.8104,  0.8276,  0.8961,  ...,  1.1187,  0.8789,  0.6734],
          ...,
          [ 1.1015,  0.6906,  0.7591,  ...,  0.8789,  0.9646,  0.9646],
          [ 1.1015,  0.7077,  0.4337,  ...,  0.3823,  0.5022,  0.7933],
          [ 0.9303,  0.5878,  0.5878,  ...,  0.3823,  0.3481,  0.2111]],

         [[ 1.2731,  1.3256,  1.3782,  ...,  1.5532,  1.3957,  1.1506],
          [ 1.1506,  1.1681,  1.2381,  ...,  1.5182,  1.3431,  1.0980],
          [ 1.0280,  1.0455,  1.1155,  ...,  1.4132,  1.2031,  1.0105],
          ...,
          [ 0.8354,  0.5378,  0.5553,  ...,  0.6604,  0.6779,  0.6604],
          [ 0.8179,  0.5028,  0.2052,  ...,  0.2402,  0.2752,  0.5028],
          [ 0.5903,  0.2752,  0.2927,  ...,  0.3102,  0.2227,  0.0301]],

         [[ 1.6465,  1.6988,  1.7511,  ...,  1.9777,  1.9080,  1.6988],
          [ 1.5594,  1.5942,  1.6465,  ...,  1.9777,  1.8731,  1.6640],
          [ 1.4548,  1.4548,  1.5245,  ...,  1.8905,  1.7685,  1.6117],
          ...,
          [-0.8458, -1.0376, -0.9853,  ..., -1.1770, -1.1421, -1.1770],
          [-1.0027, -1.2293, -1.4384,  ..., -1.5779, -1.5430, -1.3164],
          [-1.0898, -1.2990, -1.2467,  ..., -1.5604, -1.5779, -1.6476]]],


        [[[ 2.0605,  2.0605,  2.0605,  ...,  0.7419,  0.7933,  0.8104],
          [ 2.0777,  2.0777,  2.0605,  ...,  1.0159,  1.1015,  1.1529],
          [ 2.0777,  2.0777,  2.0434,  ...,  1.5639,  1.6324,  1.6838],
          ...,
          [-1.2617, -1.0219, -0.9534,  ..., -1.1075, -1.0390, -1.2274],
          [-1.2274, -1.2959, -0.9192,  ..., -0.8164, -0.7650, -1.0219],
          [-1.4843, -1.5014, -0.8164,  ..., -0.9192, -0.7479, -1.1589]],

         [[-0.0399, -0.0049,  0.0826,  ..., -0.8277, -0.8452, -0.8452],
          [ 0.0126,  0.0301,  0.0651,  ..., -0.6001, -0.5651, -0.5476],
          [ 0.0651,  0.0651,  0.0301,  ..., -0.2500, -0.1975, -0.1275],
          ...,
          [-1.5630, -1.5105, -1.3880,  ..., -1.3179, -1.3880, -1.4405],
          [-1.3880, -1.6155, -1.3704,  ..., -1.0553, -1.1779, -1.2654],
          [-1.5980, -1.6856, -1.2829,  ..., -1.2479, -1.2129, -1.4405]],

         [[-0.5495, -0.5495, -0.5147,  ..., -0.8110, -0.7936, -0.7936],
          [-0.5495, -0.5321, -0.5147,  ..., -0.7587, -0.7064, -0.6715],
          [-0.5670, -0.5321, -0.5147,  ..., -0.5844, -0.5147, -0.4450],
          ...,
          [-1.4210, -1.3339, -1.2816,  ..., -1.2990, -1.2467, -1.2816],
          [-1.2990, -1.4733, -1.1770,  ..., -1.0550, -1.0376, -1.0724],
          [-1.4559, -1.5256, -1.0201,  ..., -1.1944, -1.0376, -1.1944]]],


        [[[-0.3369, -0.3369, -0.3369,  ..., -1.9467, -2.0323, -2.0494],
          [-0.2513, -0.2856, -0.3027,  ..., -1.8782, -1.9638, -2.0665],
          [-0.0801, -0.1657, -0.2171,  ..., -1.8610, -1.8953, -1.9980],
          ...,
          [-0.3369, -0.3027, -0.2856,  ..., -1.5185, -1.5185, -1.3815],
          [-0.3541, -0.3712, -0.3883,  ..., -1.6727, -1.7412, -1.7069],
          [-0.4568, -0.4226, -0.4226,  ..., -1.6555, -1.9124, -1.9467]],

         [[-0.3200, -0.3375, -0.3375,  ..., -1.5455, -1.4405, -1.4755],
          [-0.2500, -0.2850, -0.3025,  ..., -1.6331, -1.5280, -1.4405],
          [-0.1099, -0.1975, -0.2500,  ..., -1.6681, -1.6155, -1.4930],
          ...,
          [-0.0574, -0.0224, -0.0049,  ..., -1.4755, -1.4930, -1.4405],
          [-0.0574, -0.0924, -0.0924,  ..., -1.4755, -1.5455, -1.5630],
          [-0.1625, -0.1450, -0.1275,  ..., -1.4405, -1.6155, -1.6331]],

         [[-0.3578, -0.3578, -0.3753,  ..., -1.4036, -1.6127, -1.5430],
          [-0.3578, -0.3927, -0.3578,  ..., -1.2641, -1.4733, -1.5779],
          [-0.2707, -0.3578, -0.3578,  ..., -1.1770, -1.3164, -1.5256],
          ...,
          [ 0.4091,  0.4788,  0.5136,  ..., -1.2293, -1.2467, -1.1596],
          [ 0.3742,  0.4091,  0.4439,  ..., -1.3339, -1.3861, -1.4384],
          [ 0.2696,  0.3393,  0.4091,  ..., -1.3339, -1.5256, -1.5779]]]])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
batch 11 loss: 0.0
torch.Size([32, 3, 256, 256])
tensor([[[[-0.0287,  0.0227,  0.0398,  ..., -0.2684, -0.2684, -0.2684],
          [ 0.1083,  0.0741,  0.0912,  ..., -0.2513, -0.2684, -0.2684],
          [ 0.2967,  0.2453,  0.1768,  ..., -0.2342, -0.2513, -0.2856],
          ...,
          [-2.1179, -2.1179, -2.1179,  ..., -1.6727, -1.5357, -1.5699],
          [-2.1179, -2.1179, -2.1179,  ..., -2.0494, -1.7069, -1.6898],
          [-2.1179, -2.1179, -2.1179,  ..., -2.1179, -2.0494, -1.9980]],

         [[ 0.9405,  0.9930,  1.0455,  ...,  0.6604,  0.6604,  0.6604],
          [ 1.0805,  1.0455,  1.0805,  ...,  0.6779,  0.6604,  0.6604],
          [ 1.2731,  1.2206,  1.1681,  ...,  0.6954,  0.6779,  0.6429],
          ...,
          [-2.0357, -2.0357, -2.0357,  ..., -1.4580, -1.3529, -1.3529],
          [-2.0357, -2.0357, -2.0357,  ..., -1.9132, -1.5280, -1.4930],
          [-2.0357, -2.0357, -2.0357,  ..., -2.0007, -1.9132, -1.8606]],

         [[ 2.0125,  2.0648,  2.0997,  ...,  1.7337,  1.7337,  1.7337],
          [ 2.1520,  2.1171,  2.1346,  ...,  1.7511,  1.7337,  1.7337],
          [ 2.3437,  2.2914,  2.2217,  ...,  1.7685,  1.7511,  1.7163],
          ...,
          [-1.8044, -1.8044, -1.8044,  ..., -1.1596, -1.0201, -1.0027],
          [-1.8044, -1.8044, -1.8044,  ..., -1.6302, -1.2293, -1.1770],
          [-1.8044, -1.8044, -1.8044,  ..., -1.7173, -1.6302, -1.5779]]],


        [[[ 0.3481,  0.3481,  0.3652,  ...,  0.2624,  0.2453,  0.2453],
          [ 0.3652,  0.3652,  0.3823,  ...,  0.2796,  0.2624,  0.2624],
          [ 0.3823,  0.3823,  0.3823,  ...,  0.2796,  0.2796,  0.2796],
          ...,
          [-1.9467, -1.8268, -1.6042,  ..., -1.7069, -1.7412, -1.7412],
          [-1.8782, -1.7240, -1.2959,  ..., -1.6213, -1.6213, -1.8610],
          [-1.5870, -1.5185, -1.2445,  ..., -1.4500, -1.5528, -1.7754]],

         [[ 1.1506,  1.1506,  1.1681,  ...,  0.9930,  0.9755,  0.9755],
          [ 1.1681,  1.1681,  1.1856,  ...,  1.0105,  0.9930,  0.9930],
          [ 1.1856,  1.1856,  1.1856,  ...,  1.0105,  1.0105,  1.0105],
          ...,
          [-1.8957, -1.8782, -1.8256,  ..., -1.6155, -1.6331, -1.6506],
          [-1.8782, -1.8606, -1.6155,  ..., -1.5105, -1.5280, -1.7731],
          [-1.6681, -1.7206, -1.5805,  ..., -1.3354, -1.4405, -1.6856]],

         [[ 2.0474,  2.0474,  2.0648,  ...,  1.8557,  1.8383,  1.8383],
          [ 2.0648,  2.0648,  2.0823,  ...,  1.8731,  1.8557,  1.8557],
          [ 2.0823,  2.0823,  2.0823,  ...,  1.8731,  1.8731,  1.8731],
          ...,
          [-1.7522, -1.7347, -1.7173,  ..., -1.6127, -1.6476, -1.5779],
          [-1.7347, -1.7696, -1.6302,  ..., -1.5256, -1.5256, -1.6824],
          [-1.5779, -1.6650, -1.6302,  ..., -1.3339, -1.4559, -1.5953]]],


        [[[-2.1179, -2.1179, -2.1179,  ..., -2.1179, -2.1179, -2.1179],
          [-2.1008, -2.1008, -2.1179,  ..., -2.1179, -2.1179, -2.1179],
          [-2.1008, -2.1008, -2.1179,  ..., -2.1179, -2.1179, -2.1179],
          ...,
          [-1.9638, -1.9809, -1.6042,  ..., -0.8678, -0.8507, -0.9877],
          [-1.9295, -2.0152, -1.9980,  ..., -0.8849, -0.8335, -1.0048],
          [-2.0494, -2.0494, -2.0323,  ..., -0.8849, -0.8164, -0.9534]],

         [[-0.5126, -0.5126, -0.4951,  ..., -0.9503, -0.9503, -0.9503],
          [-0.4951, -0.4951, -0.4951,  ..., -0.9503, -0.9503, -0.9503],
          [-0.4951, -0.4776, -0.4951,  ..., -0.9503, -0.9503, -0.9503],
          ...,
          [-1.8957, -1.9482, -1.5280,  ..., -0.4951, -0.4601, -0.5301],
          [-1.8431, -1.9307, -1.9132,  ..., -0.5301, -0.4601, -0.5826],
          [-1.9482, -1.9482, -1.9482,  ..., -0.5476, -0.4601, -0.5476]],

         [[ 1.5942,  1.5942,  1.6117,  ...,  1.0714,  1.0714,  1.0714],
          [ 1.6117,  1.6117,  1.6117,  ...,  1.0714,  1.0714,  1.0714],
          [ 1.6117,  1.6291,  1.6117,  ...,  1.0714,  1.0714,  1.0714],
          ...,
          [-1.6650, -1.6476, -1.1944,  ..., -0.0964, -0.0615, -0.0790],
          [-1.6127, -1.6824, -1.6127,  ..., -0.1138, -0.0615, -0.1138],
          [-1.7347, -1.6999, -1.6824,  ..., -0.1312, -0.0441, -0.0790]]],


        ...,


        [[[-1.9124, -1.9124, -1.9295,  ...,  0.7591,  0.7419,  0.7248],
          [-1.9295, -1.9295, -1.9467,  ...,  0.7591,  0.7419,  0.7419],
          [-1.9467, -1.9467, -1.9467,  ...,  0.7762,  0.7591,  0.7591],
          ...,
          [-1.7069, -1.6898, -1.6042,  ..., -1.0048, -1.0904, -1.0733],
          [-1.6213, -1.5699, -1.4500,  ..., -1.2274, -1.2788, -1.3130],
          [-1.5870, -1.6213, -1.5699,  ..., -1.1589, -1.0733, -1.1932]],

         [[-1.9132, -1.9132, -1.9307,  ...,  0.3452,  0.3277,  0.3102],
          [-1.9307, -1.9307, -1.9482,  ...,  0.3452,  0.3277,  0.3277],
          [-1.9482, -1.9482, -1.9482,  ...,  0.3627,  0.3452,  0.3452],
          ...,
          [-1.7731, -1.7556, -1.6681,  ..., -1.1253, -1.2129, -1.1954],
          [-1.6856, -1.6331, -1.5105,  ..., -1.3354, -1.4055, -1.4230],
          [-1.6506, -1.6856, -1.6331,  ..., -1.1954, -1.1253, -1.2304]],

         [[-1.7347, -1.7347, -1.7522,  ..., -0.0964, -0.1138, -0.1312],
          [-1.7522, -1.7522, -1.7696,  ..., -0.1138, -0.1312, -0.1312],
          [-1.7696, -1.7696, -1.7696,  ..., -0.1312, -0.1312, -0.1487],
          ...,
          [-1.6302, -1.6127, -1.5081,  ..., -1.1944, -1.2816, -1.2641],
          [-1.5430, -1.4907, -1.3687,  ..., -1.2641, -1.3339, -1.3513],
          [-1.5081, -1.5430, -1.4733,  ..., -1.2119, -1.1247, -1.2467]]],


        [[[ 0.6906,  0.6906,  0.6563,  ...,  1.0844,  0.7419,  0.7248],
          [ 0.6906,  0.6906,  0.6734,  ...,  0.3309,  0.5878,  0.3481],
          [ 0.6906,  0.6563,  0.6563,  ...,  0.0398,  0.2967,  0.2453],
          ...,
          [-0.3712, -0.3369, -0.2342,  ..., -0.1143, -0.0116, -0.3027],
          [-0.3027, -0.2171, -0.4739,  ..., -0.0629, -0.3198, -1.0733],
          [-0.4054, -0.3369, -0.6794,  ...,  0.3309,  0.4337, -0.7650]],

         [[ 1.1506,  1.1506,  1.1155,  ...,  1.0455,  0.6779,  0.6429],
          [ 1.1506,  1.1506,  1.1331,  ...,  0.2577,  0.5203,  0.2577],
          [ 1.1506,  1.1155,  1.1155,  ..., -0.0399,  0.2052,  0.1702],
          ...,
          [-0.1975, -0.1800, -0.0399,  ..., -0.1625, -0.0749, -0.3550],
          [-0.0924, -0.0574, -0.2500,  ..., -0.1099, -0.4426, -1.1429],
          [-0.1975, -0.1800, -0.4776,  ...,  0.2577,  0.2752, -0.8277]],

         [[ 1.7860,  1.7860,  1.7511,  ...,  0.8622,  0.5136,  0.5659],
          [ 1.7860,  1.7860,  1.7685,  ...,  0.1128,  0.3742,  0.1476],
          [ 1.7860,  1.7511,  1.7511,  ..., -0.1138,  0.0953, -0.0092],
          ...,
          [-0.0267, -0.0092,  0.1302,  ..., -0.1138,  0.0605, -0.2881],
          [ 0.1128,  0.1651, -0.0615,  ..., -0.0964, -0.3578, -0.9678],
          [-0.0092,  0.0256, -0.2707,  ...,  0.2696,  0.2522, -0.6890]]],


        [[[-1.9809, -1.8953, -1.7412,  ..., -1.4158, -1.6384, -1.7240],
          [-1.9809, -1.8953, -1.7412,  ..., -1.2959, -1.5185, -1.6042],
          [-1.9638, -1.8268, -1.7069,  ..., -1.1932, -1.3130, -1.4158],
          ...,
          [ 0.7077,  0.3138,  0.1426,  ..., -0.0629,  0.0398,  0.3309],
          [ 0.7077,  0.1254, -0.1999,  ...,  0.2796,  0.1597,  0.5193],
          [ 0.2796, -0.3541, -0.5253,  ...,  0.3481,  0.7419,  0.5193]],

         [[ 0.4853,  0.6078,  0.5728,  ...,  0.7304,  0.6954,  0.6604],
          [ 0.5553,  0.5728,  0.5728,  ...,  0.7829,  0.6954,  0.6779],
          [ 0.5728,  0.5903,  0.5903,  ...,  0.8004,  0.7479,  0.6954],
          ...,
          [ 0.1176, -0.1975, -0.3025,  ..., -0.7927, -0.7402, -0.5301],
          [ 0.2052, -0.2500, -0.5476,  ..., -0.4776, -0.6527, -0.4776],
          [-0.1975, -0.7227, -0.8803,  ..., -0.4251,  0.0476, -0.4776]],

         [[ 1.6640,  1.7685,  1.7685,  ...,  1.7860,  1.7337,  1.6814],
          [ 1.6988,  1.7511,  1.7685,  ...,  1.8557,  1.7860,  1.7337],
          [ 1.7163,  1.7685,  1.7860,  ...,  1.8731,  1.8557,  1.7860],
          ...,
          [-0.5321, -0.8110, -0.8458,  ..., -1.1596, -1.0724, -1.0027],
          [-0.4450, -0.7761, -1.0550,  ..., -0.9156, -0.9504, -1.1073],
          [-0.8981, -1.1596, -1.2467,  ..., -0.8284, -0.3404, -1.0201]]]])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
batch 12 loss: 0.0
torch.Size([32, 3, 256, 256])
tensor([[[[ 0.4508,  0.3481, -0.3883,  ..., -0.5767, -0.4397, -0.3541],
          [ 0.4508,  0.0398, -0.7137,  ..., -0.3369, -0.2513, -0.2684],
          [ 0.1939,  0.1939, -0.7822,  ..., -0.1314, -0.1486, -0.1999],
          ...,
          [-1.8439, -1.9980, -1.9638,  ..., -0.6109, -0.5767, -0.9363],
          [-1.7069, -1.7412, -1.8610,  ..., -0.5253, -0.9020, -1.0904],
          [-1.6727, -1.2274, -1.6213,  ..., -0.4226, -0.9363, -1.0733]],

         [[ 0.5903,  0.4853, -0.2675,  ..., -0.4601, -0.3200, -0.2325],
          [ 0.5903,  0.1702, -0.6001,  ..., -0.2150, -0.1275, -0.1450],
          [ 0.3277,  0.3277, -0.6702,  ..., -0.0049, -0.0224, -0.0749],
          ...,
          [-1.7556, -1.9132, -1.8782,  ..., -0.4951, -0.4601, -0.8277],
          [-1.6155, -1.6506, -1.7731,  ..., -0.4076, -0.7927, -0.9853],
          [-1.5805, -1.1253, -1.5280,  ..., -0.3025, -0.8277, -0.9678]],

         [[ 0.8099,  0.7054, -0.0441,  ..., -0.2358, -0.0964, -0.0092],
          [ 0.8099,  0.3916, -0.3753,  ...,  0.0082,  0.0953,  0.0779],
          [ 0.5485,  0.5485, -0.4450,  ...,  0.2173,  0.1999,  0.1476],
          ...,
          [-1.5256, -1.6824, -1.6476,  ..., -0.2707, -0.2358, -0.6018],
          [-1.3861, -1.4210, -1.5430,  ..., -0.1835, -0.5670, -0.7587],
          [-1.3513, -0.8981, -1.2990,  ..., -0.0790, -0.6018, -0.7413]]],


        [[[-0.8678, -0.8678, -0.8849,  ..., -1.1932, -1.1932, -1.2274],
          [-0.8507, -0.8507, -0.8678,  ..., -1.1932, -1.1932, -1.2103],
          [-0.8507, -0.8335, -0.8507,  ..., -1.1760, -1.1760, -1.1932],
          ...,
          [-1.4843, -1.4672, -1.0048,  ..., -1.3815, -1.1760, -1.1760],
          [-1.4329, -1.5014, -1.0733,  ..., -1.4672, -1.2788, -1.1760],
          [-1.4158, -1.5357, -1.0733,  ..., -1.4158, -1.2959, -1.1932]],

         [[-0.9503, -0.9503, -0.9678,  ..., -1.1954, -1.1954, -1.2304],
          [-0.9328, -0.9328, -0.9503,  ..., -1.1954, -1.1954, -1.2129],
          [-0.9328, -0.9153, -0.9328,  ..., -1.1779, -1.1779, -1.1954],
          ...,
          [-1.3179, -1.3179, -1.0203,  ..., -1.3354, -1.1604, -1.2654],
          [-1.2829, -1.3529, -1.0903,  ..., -1.4055, -1.2654, -1.2479],
          [-1.2829, -1.4055, -1.1078,  ..., -1.3704, -1.2479, -1.2304]],

         [[-0.6541, -0.6541, -0.6715,  ..., -0.9330, -0.9330, -0.9678],
          [-0.6367, -0.6367, -0.6541,  ..., -0.9330, -0.9330, -0.9504],
          [-0.6367, -0.6193, -0.6367,  ..., -0.9156, -0.9156, -0.9330],
          ...,
          [-1.6999, -1.5779, -1.6127,  ..., -1.6650, -1.6824, -1.7173],
          [-1.6824, -1.6302, -1.6650,  ..., -1.6999, -1.7173, -1.6999],
          [-1.6824, -1.6824, -1.6824,  ..., -1.7347, -1.7173, -1.6824]]],


        [[[ 1.8722,  1.8722,  1.8550,  ...,  1.4783,  1.4612,  1.4783],
          [ 1.8722,  1.8722,  1.8722,  ...,  1.4612,  1.4440,  1.4440],
          [ 1.8722,  1.8722,  1.8893,  ...,  1.4440,  1.4440,  1.4098],
          ...,
          [ 0.7419,  0.7933,  0.7762,  ...,  0.5364,  0.5193,  0.5364],
          [ 0.7248,  0.7419,  0.7248,  ...,  0.5707,  0.4851,  0.5022],
          [ 0.7419,  0.7248,  0.6906,  ...,  0.5536,  0.5364,  0.5536]],

         [[ 1.9734,  1.9734,  1.9559,  ...,  1.6057,  1.5882,  1.6057],
          [ 1.9734,  1.9734,  1.9734,  ...,  1.5882,  1.5707,  1.5707],
          [ 1.9734,  1.9734,  1.9909,  ...,  1.5707,  1.5707,  1.5357],
          ...,
          [ 0.8704,  0.9230,  0.9055,  ...,  0.7304,  0.7129,  0.7304],
          [ 0.8529,  0.8704,  0.8529,  ...,  0.7654,  0.6779,  0.6954],
          [ 0.8704,  0.8529,  0.8179,  ...,  0.7479,  0.7304,  0.7479]],

         [[ 2.2043,  2.2043,  2.1868,  ...,  2.0125,  1.9951,  2.0125],
          [ 2.2043,  2.2043,  2.2043,  ...,  1.9951,  1.9777,  1.9777],
          [ 2.2043,  2.2043,  2.2217,  ...,  1.9777,  1.9777,  1.9428],
          ...,
          [ 1.1759,  1.2282,  1.2108,  ...,  1.0365,  1.0191,  1.0365],
          [ 1.1585,  1.1759,  1.1585,  ...,  1.0714,  0.9842,  1.0017],
          [ 1.1759,  1.1585,  1.1237,  ...,  1.0539,  1.0365,  1.0539]]],


        ...,


        [[[ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          ...,
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489]],

         [[ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          ...,
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286]],

         [[ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          ...,
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400]]],


        [[[ 1.8037,  1.7865,  1.8037,  ...,  0.1939,  0.1597,  0.1597],
          [ 1.8379,  1.8208,  1.8208,  ...,  0.1939,  0.1768,  0.1768],
          [ 1.8550,  1.8550,  1.8379,  ...,  0.1939,  0.1939,  0.1939],
          ...,
          [-2.0494, -2.0665, -2.0494,  ..., -0.8849, -0.7822, -1.0219],
          [-2.0494, -2.0665, -2.0665,  ..., -0.7479, -0.4911, -0.7993],
          [-2.0494, -2.0665, -2.0837,  ..., -0.5424, -0.3541, -0.6794]],

         [[ 2.0784,  2.0609,  2.0784,  ...,  0.5903,  0.5553,  0.5553],
          [ 2.1134,  2.0959,  2.0959,  ...,  0.5903,  0.5728,  0.5728],
          [ 2.1310,  2.1310,  2.1134,  ...,  0.5903,  0.5903,  0.5903],
          ...,
          [-1.9657, -1.9832, -1.9657,  ..., -0.9853, -0.8803, -1.1253],
          [-1.9657, -1.9832, -1.9832,  ..., -0.8452, -0.6001, -0.9503],
          [-1.9657, -1.9832, -2.0007,  ..., -0.6527, -0.4776, -0.8102]],

         [[ 2.5703,  2.5529,  2.5703,  ...,  1.3851,  1.3502,  1.3502],
          [ 2.6051,  2.5877,  2.5877,  ...,  1.3851,  1.3677,  1.3677],
          [ 2.6226,  2.6226,  2.6051,  ...,  1.3851,  1.3851,  1.3851],
          ...,
          [-1.7696, -1.7870, -1.7696,  ..., -1.0201, -0.8807, -1.0201],
          [-1.7696, -1.7870, -1.7870,  ..., -0.9156, -0.6193, -0.8458],
          [-1.7696, -1.7870, -1.7870,  ..., -0.7413, -0.5147, -0.7413]]],


        [[[ 0.8789,  0.8961,  0.9132,  ...,  1.2557,  1.2385,  1.2214],
          [ 0.8961,  0.9132,  0.9303,  ...,  1.2728,  1.2557,  1.2385],
          [ 0.8961,  0.9132,  0.9474,  ...,  1.2728,  1.2557,  1.2385],
          ...,
          [-1.3302, -1.3130, -1.2788,  ..., -0.9534, -0.9534, -0.9877],
          [-1.2959, -1.3302, -1.4329,  ..., -1.0733, -1.0048, -0.9877],
          [-1.1418, -1.1932, -1.2788,  ..., -1.0219, -1.0219, -0.9877]],

         [[ 1.0630,  1.0805,  1.0980,  ...,  1.4132,  1.3957,  1.3782],
          [ 1.0805,  1.0980,  1.1155,  ...,  1.4307,  1.4132,  1.3957],
          [ 1.0805,  1.0980,  1.1331,  ...,  1.4307,  1.4132,  1.3957],
          ...,
          [-1.0903, -1.0728, -1.0378,  ..., -0.7577, -0.7577, -0.7927],
          [-1.0553, -1.0728, -1.1954,  ..., -0.8803, -0.8102, -0.7927],
          [-0.8803, -0.9328, -1.0203,  ..., -0.8277, -0.8277, -0.7927]],

         [[ 1.4897,  1.5071,  1.5245,  ...,  1.8034,  1.7860,  1.7685],
          [ 1.5071,  1.5245,  1.5420,  ...,  1.8208,  1.8034,  1.7860],
          [ 1.5071,  1.5245,  1.5594,  ...,  1.8208,  1.8034,  1.7860],
          ...,
          [-0.8284, -0.8110, -0.7761,  ..., -0.4798, -0.4798, -0.5147],
          [-0.8284, -0.8458, -0.9678,  ..., -0.6018, -0.5321, -0.5147],
          [-0.6715, -0.7238, -0.8110,  ..., -0.5495, -0.5495, -0.5147]]]])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
batch 13 loss: 0.0
torch.Size([32, 3, 256, 256])
tensor([[[[-0.7137, -0.6965, -0.6794,  ..., -0.3541, -0.3712, -0.4397],
          [-0.7479, -0.7308, -0.7137,  ..., -0.3198, -0.3712, -0.4054],
          [-0.7993, -0.7993, -0.7650,  ..., -0.3369, -0.3541, -0.3712],
          ...,
          [ 1.4954,  1.3927,  0.8276,  ..., -0.0801, -0.0801, -0.6794],
          [ 1.2899,  1.1358,  0.9132,  ..., -0.4911, -0.6623, -1.4158],
          [ 1.5297,  1.3242,  1.1187,  ..., -0.7479, -1.2959, -1.5014]],

         [[ 0.2052,  0.2227,  0.2402,  ...,  0.6254,  0.5903,  0.5203],
          [ 0.1702,  0.1877,  0.1877,  ...,  0.6604,  0.5903,  0.5553],
          [ 0.1527,  0.1527,  0.1702,  ...,  0.6429,  0.6254,  0.5903],
          ...,
          [ 1.1856,  1.2031,  0.7479,  ...,  0.0476,  0.0126, -0.6702],
          [ 0.9755,  1.0280,  0.7829,  ..., -0.4776, -0.5826, -1.3354],
          [ 1.1681,  1.0805,  0.8529,  ..., -0.7052, -1.2304, -1.4055]],

         [[ 1.5071,  1.5245,  1.5420,  ...,  1.8731,  1.8731,  1.8383],
          [ 1.4897,  1.5071,  1.5245,  ...,  1.8905,  1.8731,  1.8731],
          [ 1.4897,  1.5071,  1.5245,  ...,  1.8731,  1.8905,  1.9080],
          ...,
          [ 0.2522,  0.2522, -0.1835,  ...,  0.0431,  0.1128, -0.5321],
          [-0.1661, -0.1835, -0.1835,  ..., -0.3230, -0.4624, -1.2641],
          [-0.0964, -0.1661, -0.0441,  ..., -0.7587, -1.1596, -1.3339]]],


        [[[-0.7308, -0.7308, -0.7479,  ..., -0.3369, -0.3369, -0.3369],
          [-0.7308, -0.7308, -0.7479,  ..., -0.3198, -0.3198, -0.3198],
          [-0.7308, -0.7308, -0.7308,  ..., -0.3027, -0.3027, -0.3027],
          ...,
          [-0.0116, -0.0287, -0.0287,  ...,  1.0673,  1.0673,  1.1015],
          [ 0.0227,  0.0056,  0.0227,  ...,  1.0331,  1.1015,  1.0844],
          [ 0.0398,  0.0227,  0.0569,  ...,  1.0502,  1.0673,  1.0673]],

         [[-0.0749, -0.0749, -0.0924,  ...,  0.3803,  0.3803,  0.3803],
          [-0.0749, -0.0749, -0.0924,  ...,  0.3978,  0.3978,  0.3978],
          [-0.0749, -0.0749, -0.0749,  ...,  0.4153,  0.4153,  0.4153],
          ...,
          [-0.7752, -0.7752, -0.7752,  ...,  0.4503,  0.4503,  0.5028],
          [-0.7752, -0.7927, -0.7577,  ...,  0.3978,  0.4678,  0.4503],
          [-0.7577, -0.7752, -0.7402,  ...,  0.4153,  0.4328,  0.4328]],

         [[ 0.9145,  0.9145,  0.8971,  ...,  1.4374,  1.4374,  1.4374],
          [ 0.9145,  0.9145,  0.8971,  ...,  1.4548,  1.4548,  1.4548],
          [ 0.9145,  0.9145,  0.9145,  ...,  1.4722,  1.4722,  1.4722],
          ...,
          [-1.2641, -1.2816, -1.2641,  ..., -0.2881, -0.2881, -0.2358],
          [-1.2816, -1.2990, -1.2641,  ..., -0.3404, -0.2707, -0.2881],
          [-1.2641, -1.2816, -1.2467,  ..., -0.3230, -0.3055, -0.3055]]],


        [[[-0.6623, -0.6452, -0.6109,  ..., -0.6281, -0.6452, -0.6623],
          [-0.6281, -0.6109, -0.5767,  ..., -0.6109, -0.6281, -0.6452],
          [-0.6109, -0.5767, -0.5596,  ..., -0.5938, -0.6109, -0.6109],
          ...,
          [-1.6213, -1.6042, -1.5699,  ..., -1.5185, -1.5185, -1.5185],
          [-1.6042, -1.5870, -1.5528,  ..., -1.5528, -1.5528, -1.5528],
          [-1.5699, -1.5699, -1.5699,  ..., -1.5699, -1.5870, -1.5870]],

         [[-0.0749, -0.0574, -0.0224,  ...,  0.0126, -0.0049, -0.0224],
          [-0.0399, -0.0224,  0.0126,  ...,  0.0301,  0.0126, -0.0049],
          [-0.0224,  0.0126,  0.0301,  ...,  0.0476,  0.0301,  0.0301],
          ...,
          [-1.4930, -1.4755, -1.4405,  ..., -1.3880, -1.3880, -1.3880],
          [-1.4755, -1.4580, -1.4230,  ..., -1.4230, -1.4230, -1.4230],
          [-1.4405, -1.4405, -1.4405,  ..., -1.4405, -1.4580, -1.4580]],

         [[ 0.6182,  0.6356,  0.6705,  ...,  0.6705,  0.6356,  0.6182],
          [ 0.6531,  0.6705,  0.7054,  ...,  0.6879,  0.6531,  0.6356],
          [ 0.6705,  0.7054,  0.7228,  ...,  0.7054,  0.6705,  0.6705],
          ...,
          [-1.2816, -1.2641, -1.2467,  ..., -1.2293, -1.2293, -1.2293],
          [-1.2641, -1.2467, -1.2293,  ..., -1.2293, -1.2293, -1.2293],
          [-1.2293, -1.2293, -1.2293,  ..., -1.2293, -1.2467, -1.2467]]],


        ...,


        [[[ 0.3652,  0.0741, -0.0629,  ..., -0.7993, -0.7993, -0.7822],
          [ 0.4679,  0.1768,  0.0056,  ..., -0.8164, -0.8164, -0.7993],
          [ 0.5536,  0.3652,  0.1426,  ..., -0.8507, -0.8335, -0.7993],
          ...,
          [-1.8268, -1.5528, -1.7583,  ..., -1.9980, -1.9980, -1.9467],
          [-1.7925, -1.7754, -1.9295,  ..., -1.9638, -2.0152, -1.9295],
          [-1.7412, -1.7583, -1.8953,  ..., -1.9124, -1.9809, -1.8953]],

         [[ 0.2402,  0.1176,  0.1001,  ..., -0.3550, -0.3550, -0.3375],
          [ 0.3102,  0.1877,  0.1176,  ..., -0.3725, -0.3725, -0.3550],
          [ 0.3452,  0.2752,  0.1527,  ..., -0.4076, -0.3901, -0.3550],
          ...,
          [-1.5805, -1.3004, -1.5280,  ..., -1.6681, -1.6681, -1.5980],
          [-1.5280, -1.4930, -1.6856,  ..., -1.6506, -1.7031, -1.5980],
          [-1.4580, -1.4755, -1.6331,  ..., -1.6155, -1.7031, -1.6155]],

         [[ 0.4265,  0.3045,  0.3393,  ...,  0.3916,  0.3916,  0.4091],
          [ 0.4962,  0.3742,  0.3568,  ...,  0.3742,  0.3742,  0.3916],
          [ 0.4962,  0.4439,  0.3568,  ...,  0.3393,  0.3568,  0.3916],
          ...,
          [-1.4733, -1.2467, -1.4384,  ..., -1.2990, -1.2990, -1.3164],
          [-1.4907, -1.5081, -1.6302,  ..., -1.2990, -1.3164, -1.2990],
          [-1.5081, -1.5256, -1.5953,  ..., -1.2990, -1.3164, -1.2816]]],


        [[[-1.0048, -1.0562, -0.9534,  ...,  1.4440,  1.3584,  1.2043],
          [-1.0219, -1.0390, -0.9020,  ...,  1.5125,  1.4269,  1.3413],
          [-1.0048, -1.0390, -0.8678,  ...,  1.5982,  1.5810,  1.5810],
          ...,
          [ 0.7762,  0.8618,  1.2557,  ..., -1.1418, -0.8678, -1.6042],
          [ 0.6221,  0.4166,  1.0844,  ..., -0.9192, -0.9020, -1.0390],
          [-0.0287,  0.5193,  0.6906,  ..., -1.2274, -1.1589, -0.9877]],

         [[-0.1975, -0.1800, -0.2675,  ...,  2.0609,  2.0259,  2.0084],
          [-0.1800, -0.2675, -0.3025,  ...,  2.1310,  2.0609,  2.0434],
          [-0.2500, -0.3550, -0.2850,  ...,  2.2010,  2.1835,  2.1835],
          ...,
          [ 0.0126,  0.1001,  0.3277,  ..., -1.1429, -0.8277, -1.5105],
          [-0.0224, -0.2325,  0.2927,  ..., -0.9328, -0.9153, -0.9853],
          [-0.6176, -0.0399,  0.0126,  ..., -1.2654, -1.1604, -1.0028]],

         [[ 1.0191,  1.0017,  1.1062,  ...,  2.6226,  2.6226,  2.6051],
          [ 1.0191,  0.9842,  1.0539,  ...,  2.6226,  2.5877,  2.5877],
          [ 0.9668,  0.9668,  1.0365,  ...,  2.5877,  2.5877,  2.6226],
          ...,
          [-0.4973, -0.4450, -0.4798,  ..., -0.8284, -0.5495, -1.1596],
          [-0.4275, -0.7587, -0.5844,  ..., -0.6367, -0.4973, -0.6890],
          [-0.9156, -0.5321, -0.6715,  ..., -0.8981, -0.6715, -0.8284]]],


        [[[ 0.5022,  0.5193,  0.5536,  ...,  0.0741, -0.0629, -0.2342],
          [ 0.5364,  0.5536,  0.5707,  ..., -0.2171, -0.2856, -0.3541],
          [ 0.5707,  0.5707,  0.5878,  ..., -0.3883, -0.3541, -0.2856],
          ...,
          [-0.3712, -0.6794, -0.7993,  ...,  0.1768,  0.1597,  0.1254],
          [-0.4568, -0.6794, -1.0562,  ...,  0.1083,  0.1426,  0.1426],
          [-0.2342, -0.5253, -0.7137,  ...,  0.0227,  0.0912,  0.1254]],

         [[-0.0049,  0.0126,  0.0126,  ..., -0.4776, -0.5476, -0.5826],
          [ 0.0301,  0.0476,  0.0476,  ..., -0.5476, -0.5826, -0.5826],
          [ 0.0826,  0.0826,  0.0651,  ..., -0.6001, -0.6001, -0.6001],
          ...,
          [-0.6352, -0.8803, -0.9328,  ..., -0.1275, -0.1450, -0.1800],
          [-0.7052, -0.8978, -1.2129,  ..., -0.1800, -0.1625, -0.1625],
          [-0.5126, -0.7752, -0.9153,  ..., -0.2850, -0.2150, -0.1800]],

         [[-0.2532, -0.2532, -0.2532,  ..., -0.6367, -0.6193, -0.5670],
          [-0.2532, -0.2358, -0.2358,  ..., -0.6018, -0.5844, -0.5670],
          [-0.2532, -0.2532, -0.2358,  ..., -0.5321, -0.5670, -0.6193],
          ...,
          [-0.7936, -0.9504, -0.9330,  ..., -0.3055, -0.3055, -0.3404],
          [-0.8807, -0.9853, -1.2119,  ..., -0.3578, -0.3230, -0.3230],
          [-0.7587, -0.9156, -0.9853,  ..., -0.4624, -0.3753, -0.3404]]]])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
1 256 64 64
1 256 64 64
1 256 64 64
torch.Size([1, 256, 64, 64])
torch.Size([256, 256])
torch.Size([256, 256])
torch.Size([256, 256])
batch 14 loss: 0.0
Traceback (most recent call last):
  File "/oscar/home/syu66/Documents/cs143-final-artist-dupes/perception_transfer/train.py", line 135, in <module>
    main()
  File "/oscar/home/syu66/Documents/cs143-final-artist-dupes/perception_transfer/train.py", line 103, in main
    avg_loss = train_one_epoch()
               ^^^^^^^^^^^^^^^^^
  File "/oscar/home/syu66/Documents/cs143-final-artist-dupes/perception_transfer/train.py", line 63, in train_one_epoch
    for i, data in enumerate(training_loader):
  File "/users/syu66/.conda/envs/torchenv/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 631, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/users/syu66/.conda/envs/torchenv/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 675, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/users/syu66/.conda/envs/torchenv/lib/python3.12/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
            ~~~~~~~~~~~~^^^^^
  File "/oscar/home/syu66/Documents/cs143-final-artist-dupes/perception_transfer/preprocess.py", line 34, in __getitem__
    preprocessed_img, size = load_image_as_tensor(image_path)  # Implement load_image_as_tensor function
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/oscar/home/syu66/Documents/cs143-final-artist-dupes/perception_transfer/preprocess.py", line 20, in load_image_as_tensor
    return preprocess(img).unsqueeze(0), img.size
           ^^^^^^^^^^^^^^^
  File "/users/syu66/.conda/envs/torchenv/lib/python3.12/site-packages/torchvision/transforms/transforms.py", line 95, in __call__
    img = t(img)
          ^^^^^^
  File "/users/syu66/.conda/envs/torchenv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/users/syu66/.conda/envs/torchenv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/users/syu66/.conda/envs/torchenv/lib/python3.12/site-packages/torchvision/transforms/transforms.py", line 277, in forward
    return F.normalize(tensor, self.mean, self.std, self.inplace)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/users/syu66/.conda/envs/torchenv/lib/python3.12/site-packages/torchvision/transforms/functional.py", line 350, in normalize
    return F_t.normalize(tensor, mean=mean, std=std, inplace=inplace)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/users/syu66/.conda/envs/torchenv/lib/python3.12/site-packages/torchvision/transforms/_functional_tensor.py", line 926, in normalize
    return tensor.sub_(mean).div_(std)
           ^^^^^^^^^^^^^^^^^
RuntimeError: output with shape [1, 256, 256] doesn't match the broadcast shape [3, 256, 256]
